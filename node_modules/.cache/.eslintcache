[{"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\index.js":"1","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\reportWebVitals.js":"2","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\store.js":"3","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\App.js":"4","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\login1.js":"5","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\EmpDash.js":"6","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\AdminDash.js":"7","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpAttendance\\Emp_Atten.js":"8","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpSchedule\\EmpOwnSchedule.js":"9","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpEdit\\EmpEditDele.js":"10","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpLeave\\Leave.js":"11","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EditProfile\\Emp_profile.js":"12","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\Salary\\adminSalary.js":"13","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\Schedule\\EmpSchedule.js":"14","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\Navbar.js":"15","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\NavbarEmp.js":"16","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpSalary\\empSalary.js":"17","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpAttendance\\ReadOnlyRow.js":"18","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpSchedule\\ReadOnlyRow.js":"19","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpAttendance\\EditableRow.js":"20","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpLeave\\ReadOnlyRow.js":"21","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpEdit\\ReadOnlyRow.js":"22","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpEdit\\EditableRow.js":"23","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpSchedule\\EditableRow.js":"24","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpLeave\\EditableRow.js":"25","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EditProfile\\editform.js":"26","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EditProfile\\EditableRow.js":"27","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\Schedule\\EditableRow.js":"28","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EditProfile\\ReadOnlyRow.js":"29","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\Salary\\ReadOnlyRow.js":"30","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\Salary\\EditableRow.js":"31","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\Schedule\\ReadOnlyRow.js":"32","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\Leaves\\Leave.js":"33","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\Leaves\\EditableRow.js":"34","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\Leaves\\ReadOnlyRow.js":"35"},{"size":885,"mtime":1634798587310,"results":"36","hashOfConfig":"37"},{"size":375,"mtime":1633606921920,"results":"38","hashOfConfig":"37"},{"size":1788,"mtime":1633606921921,"results":"39","hashOfConfig":"37"},{"size":5478,"mtime":1634843929207,"results":"40","hashOfConfig":"37"},{"size":397,"mtime":1633606921916,"results":"41","hashOfConfig":"37"},{"size":3011,"mtime":1634846911248,"results":"42","hashOfConfig":"37"},{"size":2798,"mtime":1634883555776,"results":"43","hashOfConfig":"37"},{"size":3939,"mtime":1634822446844,"results":"44","hashOfConfig":"37"},{"size":4706,"mtime":1634822446855,"results":"45","hashOfConfig":"37"},{"size":6910,"mtime":1634822446850,"results":"46","hashOfConfig":"37"},{"size":4150,"mtime":1634828433865,"results":"47","hashOfConfig":"37"},{"size":4808,"mtime":1634882375959,"results":"48","hashOfConfig":"37"},{"size":4335,"mtime":1633693557004,"results":"49","hashOfConfig":"37"},{"size":5869,"mtime":1633693557006,"results":"50","hashOfConfig":"37"},{"size":1708,"mtime":1634847028019,"results":"51","hashOfConfig":"37"},{"size":1724,"mtime":1634843929314,"results":"52","hashOfConfig":"37"},{"size":1076,"mtime":1634843929250,"results":"53","hashOfConfig":"37"},{"size":265,"mtime":1634822446846,"results":"54","hashOfConfig":"37"},{"size":337,"mtime":1634822446856,"results":"55","hashOfConfig":"37"},{"size":990,"mtime":1633763110199,"results":"56","hashOfConfig":"37"},{"size":750,"mtime":1634797667445,"results":"57","hashOfConfig":"37"},{"size":729,"mtime":1633693556998,"results":"58","hashOfConfig":"37"},{"size":2109,"mtime":1633693556995,"results":"59","hashOfConfig":"37"},{"size":1597,"mtime":1633763110208,"results":"60","hashOfConfig":"37"},{"size":907,"mtime":1634825821543,"results":"61","hashOfConfig":"37"},{"size":1761,"mtime":1634882225110,"results":"62","hashOfConfig":"37"},{"size":1967,"mtime":1633845116456,"results":"63","hashOfConfig":"37"},{"size":1597,"mtime":1633693557005,"results":"64","hashOfConfig":"37"},{"size":624,"mtime":1633763110198,"results":"65","hashOfConfig":"37"},{"size":564,"mtime":1633606921911,"results":"66","hashOfConfig":"37"},{"size":905,"mtime":1633693557003,"results":"67","hashOfConfig":"37"},{"size":654,"mtime":1633612818573,"results":"68","hashOfConfig":"37"},{"size":4681,"mtime":1634843929261,"results":"69","hashOfConfig":"37"},{"size":907,"mtime":1634825821543,"results":"70","hashOfConfig":"37"},{"size":346,"mtime":1634843929285,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"3ratu5",{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"74"},"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\index.js",[],["156","157"],"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\reportWebVitals.js",[],"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\store.js",["158","159"],"\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore'; \r\n// <- needed if using firestore\r\n// import 'firebase/functions' // <- needed if using httpsCallable\r\nimport { createStore, combineReducers, compose } from 'redux'\r\nimport {\r\n  ReactReduxFirebaseProvider,\r\n  firebaseReducer\r\n} from 'react-redux-firebase'\r\n import { createFirestoreInstance, firestoreReducer } from 'redux-firestore' // <- needed if using firestore\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nconst fbConfig = {\r\n    apiKey: \"AIzaSyAoI3H2SdgbW5RuzquOOJPW-djkj9tedZA\",\r\n  authDomain: \"emp-payroll-153e4.firebaseapp.com\",\r\n  projectId: \"emp-payroll-153e4\",\r\n  storageBucket: \"emp-payroll-153e4.appspot.com\",\r\n  messagingSenderId: \"98286862311\",\r\n  appId: \"1:98286862311:web:afa408e2e53439d6a28742\",\r\n  measurementId: \"G-GLD6CG8N65\",\r\n}\r\n\r\n// react-redux-firebase config\r\nconst rrfConfig = {\r\n  userProfile: 'users',\r\n useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\r\n}\r\n\r\n// Initialize firebase instance\r\nfirebase.initializeApp(fbConfig)\r\n\r\n// Initialize other services on firebase instance\r\n firebase.firestore() // <- needed if using firestore\r\n// firebase.functions() // <- needed if using httpsCallable\r\n\r\n// Add firebase to reducers\r\nconst rootReducer = combineReducers({\r\n  firebase: firebaseReducer,\r\n   firestore: firestoreReducer // <- needed if using firestore\r\n})\r\n\r\n// Create store with reducers and initial state\r\nconst initialState = {}\r\nconst store = createStore(rootReducer, initialState,composeWithDevTools())\r\n\r\nexport const  rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n    createFirestoreInstance // <- needed if using firestore\r\n}\r\n\r\nexport default store;","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\App.js",["160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178"],"import React, { useState } from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport {BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Login from './components/login1.js';\r\nimport {Provider} from 'react-redux';\r\nimport store,{rrfProps} from './store';\r\nimport EmpSalary from \"./components/EmpSalary/empSalary\";\r\nimport EmpAtten from \"./components/EmpAttendance/Emp_Atten\";\r\nimport Emp_Prof from \"./components/EditProfile/Emp_profile\";\r\nimport Emp_OwnSch from \"./components/EmpSchedule/EmpOwnSchedule\";\r\n// import Emptable1 from './components/EmpEditDelete/Emptable';\r\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\r\nimport NavbarEmp from \"./components/NavbarEmp\";\r\nimport Salary1 from \"./components/Salary/adminSalary\";\r\nimport EmpSch from \"./components/Schedule/EmpSchedule\";\r\nimport Leaves1 from \"./components/EmpLeave/Leave\";\r\nimport EmpEdit from \"./components/EmpEdit/EmpEditDele\";\r\n//import LoginForm from './LoginForm';\r\nimport './login.css';\r\nimport EmpDashboard from './EmpDash';\r\nimport { useFirestoreConnect,useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AdminDashboard from './AdminDash';\r\nvar k=0;\r\n\r\nfunction LoginForm({ Login, error }) {\r\n  \r\n  const [details, setDetails] = useState({ type: \"Admin\", email: \"\", password: \"\" });\r\n\r\n  const submitHandler = e => {\r\n      e.preventDefault();\r\n\r\n      Login(details);\r\n  }\r\n\r\n  return (\r\n    <div class=\"login\">\r\n      <form onSubmit={submitHandler}>\r\n          <div className=\"form-inner\">\r\n              <h2>Login</h2>\r\n              {(error !== \"\") ? (<div className=\"error\">{error}</div>) : \"\"}\r\n\r\n              <div class=\"select\">\r\n              <select name=\"type\" id=\"type\"\r\n              value = {details.type} onChange={e => \r\n                  setDetails({ ...details, type: e.target.value })}\r\n              >\r\n              <option value=\"Admin\">Admin</option>\r\n              <option value=\"Employee\">Employee</option>\r\n              </select>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email: </label>\r\n                  <input type=\"email\" name=\"email\" id=\"email\" \r\n                  onChange={e => setDetails({ ...details, email: e.target.value })} value={details.email} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password: </label>\r\n                  <input type=\"password\" name=\"password\" id=\"password\" \r\n                  onChange={e => setDetails({ ...details, password: e.target.value })} value={details.password} />\r\n              </div>\r\n              <input type=\"submit\" value=\"LOGIN\" />\r\n          </div>\r\n      </form>\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nconst  App = () =>{\r\n  const emp= useSelector(state=>state.firestore.ordered.Credentials);\r\n  const att= useSelector(state=>state.firestore.ordered.Attendence)\r\n  const firestore=useFirestore();\r\n  useFirestoreConnect([\r\n    {\r\n      collection:\"Credentials\",\r\n    },\r\n  ]);\r\n  useFirestoreConnect([\r\n    {\r\n      collection:\"Attendence\",\r\n    },\r\n  ]);\r\n  \r\n  \r\n  const adminUser = {\r\n    email: \"admin@admin.com\",\r\n    password: \"\"\r\n  }\r\n\r\n  const [user, setUser] = useState({ type: \"\", email: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const Login = details => {\r\n    //console.log(details);\r\n\r\n      setUser({\r\n        type: details.type,\r\n        email: details.email\r\n      })\r\n      var doc=emp;\r\n      var attnd=att;\r\n      console.log(doc);\r\n      let flag=0;\r\n      doc.forEach(doc1 => {\r\n        if(doc1.UserID===details.email && doc1.password===details.password)\r\n        {\r\n          setUser({\r\n            type: details.type,\r\n            email: details.email\r\n          });\r\n          if(doc1.Role===\"Admin\"){\r\n            k=1;\r\n          }\r\n          var attf=0;\r\n          var today=new Date();\r\n          var date=today.getFullYear()+\"-\"+(today.getMonth()+1)+\"-\"+(today.getDate());\r\n          if(doc1.Role===\"Employee\"){\r\n            attnd.forEach(e=>{\r\n              if(e.UserID===doc1.UserID && e.Date===date)\r\n              {\r\n                attf=1;\r\n              }\r\n            })\r\n            k=2;\r\n            \r\n          }\r\n          flag=1;\r\n          localStorage.setItem(\"Email\",doc1.UserID);\r\n          console.log(localStorage.getItem(\"Email\"));\r\n          if(attf==0)\r\n          {\r\n            firestore.collection(\"Attendence\").add({\"Date\":date,\"Status\":\"Present\",\"UserID\":localStorage.getItem(\"Email\")});\r\n          }\r\n        }\r\n\r\n      });\r\n      if(flag==0)\r\n       { \r\n        k=0;\r\n        console.log(\"Details do not match\");\r\n        setError(\"Details do not match\");\r\n      }\r\n      \r\n      \r\n    \r\n  }\r\n\r\n  const Logout = () => {\r\n    setUser({ type: \"\", email: \"\" });\r\n  }\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <ReactReduxFirebaseProvider {...rrfProps}>\r\n      {(k===2) ? (\r\n        /*\r\n         <div className=\"welcome\">\r\n          <h2>Welcome , <span></span></h2>\r\n          <h2>You are , <span>{user.type}</span></h2>\r\n          <button onClick={Logout}>Logout</button>\r\n        </div> */\r\n        <>\r\n        <EmpDashboard />\r\n        </>\r\n      ) : (\r\n        // <AdminDashboard/>\r\n        (k===0)?(\r\n        <LoginForm Login={Login} error={error} />):\r\n        (\r\n          <>\r\n          <AdminDashboard/>\r\n          </>\r\n        )\r\n        \r\n      )}\r\n      </ReactReduxFirebaseProvider>\r\n      </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\login1.js",[],"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\EmpDash.js",["179","180","181","182","183","184"],"import React from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport {BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n \r\nimport {Provider} from 'react-redux';\r\nimport store,{rrfProps} from './store';\r\nimport EmpSalary from \"./components/EmpSalary/empSalary\";\r\nimport EmpAtten from \"./components/EmpAttendance/Emp_Atten\";\r\nimport Emp_Prof from \"./components/EditProfile/Emp_profile\";\r\nimport Emp_OwnSch from \"./components/EmpSchedule/EmpOwnSchedule\";\r\n// import Emptable1 from './components/EmpEditDelete/Emptable';\r\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\r\nimport NavbarEmp from \"./components/NavbarEmp\";\r\nimport Salary1 from \"./components/Salary/adminSalary\";\r\nimport EmpSch from \"./components/Schedule/EmpSchedule\";\r\nimport Leaves1 from \"./components/Leaves/Leave\";\r\nimport EmpEdit from \"./components/EmpEdit/EmpEditDele\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <NavbarEmp />\r\n      <section className=\"hero-section\">\r\n        <p>Manage all the Employees Here</p>\r\n        <h1>Welcome Employee </h1>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nconst Schedule = () => {\r\n  return (\r\n    <>\r\n      <NavbarEmp />\r\n      <section className=\"hero-section\">\r\n     <Emp_OwnSch/>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nconst Attendance = () => {\r\n  return (\r\n    <>\r\n      <NavbarEmp />\r\n      <section className=\"hero-section\">\r\n      <EmpAtten/>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nconst Editprofile = () => {\r\n  return (\r\n    <>\r\n      <NavbarEmp />\r\n      <section className=\"hero-section\">\r\n      <Emp_Prof/>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nconst Salary = () => {\r\n  return (\r\n    <>\r\n      <NavbarEmp />\r\n      <section className=\"hero-section\">\r\n      <EmpSalary/>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nconst Logout = () => {\r\n  // window.location.reload();\r\n  document.location.href=\"/\";\r\n};\r\nconst EmpLeaves = () =>{\r\n  return (\r\n    <>\r\n      <NavbarEmp />\r\n      <section className=\"hero-section\">\r\n        <Leaves1/>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <ReactReduxFirebaseProvider {...rrfProps}>\r\n        <BrowserRouter>\r\n      <Switch>\r\n      \r\n      <Route exact path=\"/\">\r\n        <Home />\r\n      </Route>\r\n      \r\n      <Route path=\"/schedule\">\r\n        <Schedule />\r\n      </Route>\r\n\r\n      <Route path=\"/salary\">\r\n        <Salary/>\r\n      </Route>\r\n\r\n      <Route path=\"/editprofile\">\r\n        <Editprofile/>\r\n      </Route>\r\n\r\n      <Route path=\"/leave\">\r\n        <EmpLeaves />\r\n      </Route>\r\n\r\n      <Route path=\"/attendance\">\r\n        <Attendance />\r\n      </Route>\r\n      \r\n      <Route path=\"/logout\">\r\n        <Logout />\r\n      </Route>\r\n\r\n    </Switch>\r\n    </BrowserRouter>\r\n      </ReactReduxFirebaseProvider>\r\n    </Provider>\r\n  );\r\n};\r\n\r\n//===================================================================================\r\n//Admin section\r\n//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\AdminDash.js",["185","186","187","188","189","190"],"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpAttendance\\Emp_Atten.js",["191","192","193","194","195","196","197","198","199","200","201","202"],"import React, { useState, Fragment } from \"react\";\r\nimport \"../empTAB.css\";\r\nimport ReadOnlyRow from \"./ReadOnlyRow\";\r\nimport EditableRow from \"./EditableRow\";\r\nimport { useFirestoreConnect,useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nconst App = () => {\r\n  const emp= useSelector(state=>state.firestore.ordered.Attendence);\r\n  const firestore=useFirestore();\r\n  let knt=0;\r\n  useFirestoreConnect([\r\n    {\r\n      collection:\"Attendence\",\r\n    },\r\n  ]);\r\n  const [contacts, setContacts] = useState(emp);\r\n  const [addFormData, setAddFormData] = useState({\r\n    Date: \"\",\r\n    Status: \"\",\r\n    UserID:\"\"\r\n  });\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    Date: \"\",\r\n    Status: \"\",\r\n    UserID:\"\"\r\n  });\r\n\r\n  const [editContactId, setEditContactId] = useState(null);\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setAddFormData(newFormData);\r\n  };\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newContact = {\r\n        Date: addFormData.Date,\r\n        Status: addFormData.Status,\r\n        UserID: addFormData.UserID\r\n    };\r\n    firestore.collection(\"Attendence\").add(newContact);\r\n  };\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedContact = {\r\n        Date: editFormData.Date,\r\n        Status: editFormData.Status,\r\n        UserID: editFormData.UserID\r\n    };\r\n\r\n    firestore.collection(\"Attendence\").doc(editContactId).update(editedContact);\r\n    //setContacts(newContacts);\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleEditClick = (event, contact) => {\r\n    event.preventDefault();\r\n    setEditContactId(contact.id);\r\n    let id=contact.id;\r\n    let formValues;\r\n    if(knt==0){\r\n      formValues= {\r\n        Date: editFormData.Date,\r\n        Status: editFormData.Status,\r\n        UserID: editFormData.UserID\r\n      };\r\n      knt=1;\r\n    }\r\n    else{\r\n      formValues = {\r\n        Date: editFormData.Date,\r\n        Status: editFormData.Status,\r\n        UserID: editFormData.UserID\r\n      };\r\n    }\r\n    setEditFormData(formValues);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (contactId) => {\r\n    //const newContacts = [...contacts];\r\n    const docref=firestore.collection(\"Attendence\").doc(contactId).delete();\r\n   // const index = contacts.findIndex((contact) => contact.id === contactId);\r\n\r\n    //newContacts.splice(index, 1);\r\n\r\n    //setContacts(newContacts);\r\n  };\r\n  \r\n  console.log(emp);\r\n  \r\n  if(!emp)\r\n    return <h1>loading</h1>\r\n    var empp=emp.filter(s=>{if(s.UserID==localStorage.getItem(\"Email\")) return s;})\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"form-box\" onSubmit={handleEditFormSubmit}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {empp.map((contact) => (\r\n              <Fragment>\r\n                 \r\n                  <ReadOnlyRow\r\n                    contact={contact}\r\n                    handleEditClick={handleEditClick}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                  />\r\n                \r\n              </Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpSchedule\\EmpOwnSchedule.js",["203","204","205","206","207","208","209","210","211","212","213","214"],"import React, { useState, Fragment } from \"react\";\r\nimport \"../empTAB.css\";\r\nimport ReadOnlyRow from \"./ReadOnlyRow\";\r\nimport EditableRow from \"./EditableRow\"\r\nimport { useFirestoreConnect,useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { EmojiPeopleRounded } from \"@mui/icons-material\";\r\nconst App = () => {\r\n  const emp= useSelector(state=>state.firestore.ordered.Schedule);\r\n  const firestore=useFirestore();\r\n  let knt=0;\r\n  \r\n  useFirestoreConnect([\r\n    {\r\n      collection:\"Schedule\",\r\n    },\r\n  ]);\r\n  console.log(emp);\r\n  const [contacts, setContacts] = useState(emp);\r\n  const [addFormData, setAddFormData] = useState({\r\n    sid: \"\",\r\n    work_hrs: \"\",\r\n    status: \"\",\r\n    date: \"\",\r\n    UserID:\"\"\r\n  });\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    sid: \"\",\r\n    work_hrs: \"\",\r\n    status: \"\",\r\n    date: \"\",\r\n    UserID:\"\"\r\n  });\r\n\r\n  const [editContactId, setEditContactId] = useState(null);\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setAddFormData(newFormData);\r\n  };\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newContact = {\r\n        sid: addFormData.sid,\r\n        work_hrs: addFormData.work_hrs,\r\n        status: addFormData.status,\r\n        date: addFormData.date,\r\n        UserID: addFormData.UserID\r\n    };\r\n    firestore.collection(\"Schedule\").add(newContact);\r\n  };\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedContact = {\r\n        sid: editFormData.sid,\r\n        work_hrs: editFormData.work_hrs,\r\n        status: editFormData.status,\r\n        date: editFormData.date,\r\n        UserID: editFormData.UserID\r\n    };\r\n\r\n    //const newContacts = [...contacts];\r\n\r\n    //const index = contacts.findIndex((contact) => contact.id === editContactId);\r\n\r\n    //newContacts[index] = editedContact;\r\n    firestore.collection(\"Schedule\").doc(editContactId).update(editedContact);\r\n    //setContacts(newContacts);\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleEditClick = (event, contact) => {\r\n    event.preventDefault();\r\n    setEditContactId(contact.id);\r\n    let id=contact.id;\r\n    let formValues;\r\n    if(knt==0){\r\n      formValues= {\r\n        sid: contact.sid,\r\n        work_hrs: contact.work_hrs,\r\n        status: contact.status,\r\n        date: contact.date,\r\n        UserID: contact.UserID\r\n      };\r\n      knt=1;\r\n    }\r\n    else{\r\n      formValues= {\r\n          sid: editFormData.sid,\r\n          work_hrs: editFormData.work_hrs,\r\n          status: editFormData.status,\r\n          date: editFormData.date,\r\n          UserID: editFormData.UserID\r\n      };\r\n    }\r\n    setEditFormData(formValues);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (contactId) => {\r\n    //const newContacts = [...contacts];\r\n    const docref=firestore.collection(\"Schedule\").doc(contactId).delete();\r\n   // const index = contacts.findIndex((contact) => contact.id === contactId);\r\n\r\n    //newContacts.splice(index, 1);\r\n\r\n    //setContacts(newContacts);\r\n  };\r\n  \r\n  console.log(emp);\r\n  \r\n  if(!emp)\r\n    return <h1>loading</h1>\r\n    var empp=emp.filter(s=>{if(s.UserID==localStorage.getItem(\"Email\")) return s;})\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"form-box\" onSubmit={handleEditFormSubmit}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>SID</th>\r\n              <th>Work Hours</th>\r\n              <th>Status</th>\r\n              <th>Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {empp.map((contact) => (\r\n              <Fragment>\r\n                {editContactId === contact.id ? (\r\n                  <EditableRow\r\n                  />\r\n                ) : (\r\n                  <ReadOnlyRow\r\n                    contact={contact}\r\n                    handleEditClick={handleEditClick}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpEdit\\EmpEditDele.js",["215","216","217","218","219"],"import React, { useState, Fragment } from \"react\";\r\nimport \"../empTAB.css\";\r\nimport ReadOnlyRow from \"./ReadOnlyRow\";\r\nimport EditableRow from \"./EditableRow\"\r\nimport { useFirestoreConnect,useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nconst App = () => {\r\n  const emp= useSelector(state=>state.firestore.ordered.Emp_Details);\r\n  const firestore=useFirestore();\r\n  let knt=0;\r\n  useFirestoreConnect([\r\n    {\r\n      collection:\"Emp_Details\",\r\n    },\r\n  ]);\r\n  const [contacts, setContacts] = useState(emp);\r\n  const [addFormData, setAddFormData] = useState({\r\n    UserID: \"\",\r\n    Address: \"\",\r\n    Designation: \"\",\r\n    Email:\"\",\r\n    Name:\"\",\r\n    dob:\"\",\r\n    phoneNumber:\"\"\r\n  });\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    UserID: \"\",\r\n    Address: \"\",\r\n    Designation: \"\",\r\n    Email:\"\",\r\n    Name:\"\",\r\n    dob:\"\",\r\n    phoneNumber:\"\"\r\n  });\r\n\r\n  const [editContactId, setEditContactId] = useState(null);\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setAddFormData(newFormData);\r\n  };\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newContact = {\r\n        UserID: addFormData.UserID,\r\n        Address: addFormData.Address,\r\n        Designation: addFormData.Designation,\r\n        Email: addFormData.Email,\r\n        Name: addFormData.Name,\r\n        dob: addFormData.dob,\r\n        phoneNumber: addFormData.phoneNumber\r\n    };\r\n    const newDat ={\r\n      UserID:addFormData.Email,\r\n      password:\"123\",\r\n      Role:\"Employee\"\r\n    };\r\n    firestore.collection(\"Emp_Details\").add(newContact);\r\n    firestore.collection(\"Credentials\").add(newDat);\r\n  };\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedContact = {\r\n        UserID: editFormData.UserID,\r\n        Address: editFormData.Address,\r\n        Designation: editFormData.Designation,\r\n        Email: editFormData.Email,\r\n        Name: editFormData.Name,\r\n        dob: editFormData.dob,\r\n        phoneNumber: editFormData.phoneNumber\r\n    };\r\n\r\n    //const newContacts = [...contacts];\r\n\r\n    //const index = contacts.findIndex((contact) => contact.id === editContactId);\r\n\r\n    //newContacts[index] = editedContact;\r\n    firestore.collection(\"Emp_Details\").doc(editContactId).update(editedContact);\r\n    //setContacts(newContacts);\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleEditClick = (event, contact) => {\r\n    event.preventDefault();\r\n    setEditContactId(contact.id);\r\n    let id=contact.id;\r\n    let formValues;\r\n    if(knt==0){\r\n      formValues= {\r\n        UserID: contact.UserID,\r\n        Address: contact.Address,\r\n        Designation: contact.Designation,\r\n        Email: contact.Email,\r\n        Name: contact.Name,\r\n        dob: contact.dob,\r\n        phoneNumber: contact.phoneNumber\r\n      };\r\n      knt=1;\r\n    }\r\n    else{\r\n      formValues = {\r\n          UserID: editFormData.UserID,\r\n          Address: editFormData.Address,\r\n          Designation: editFormData.Designation,\r\n          Email: editFormData.Email,\r\n          Name: editFormData.Name,\r\n          dob: editFormData.dob,\r\n          phoneNumber: editFormData.phoneNumber\r\n      };\r\n    }\r\n    setEditFormData(formValues);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (contactId) => {\r\n    //const newContacts = [...contacts];\r\n    const docref=firestore.collection(\"Emp_Details\").doc(contactId).delete();\r\n   // const index = contacts.findIndex((contact) => contact.id === contactId);\r\n\r\n    //newContacts.splice(index, 1);\r\n\r\n    //setContacts(newContacts);\r\n  };\r\n  \r\n  console.log(emp);\r\n  \r\n  if(!emp)\r\n    return <h1>loading</h1>\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={handleEditFormSubmit}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>UserId</th>\r\n              <th>Address</th>\r\n              <th>Designation</th>\r\n              <th>Email</th>\r\n              <th>Name</th>\r\n              <th>DOB</th>\r\n              <th>PhoneNumber</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {emp.map((contact) => (\r\n              <Fragment>\r\n                {editContactId === contact.id ? (\r\n                  <EditableRow\r\n                    editFormData={editFormData}\r\n                    handleEditFormChange={handleEditFormChange}\r\n                    handleCancelClick={handleCancelClick}\r\n                  />\r\n                ) : (\r\n                  <ReadOnlyRow\r\n                    contact={contact}\r\n                    handleEditClick={handleEditClick}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n\r\n      <h2>Add Employee</h2>\r\n      <form className=\"form-editEmp\" onSubmit={handleAddFormSubmit}>\r\n      <input\r\n          type=\"text\"\r\n          name=\"UserID\"\r\n          required=\"required\"\r\n          placeholder=\"Enter UserID...\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"Address\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Address\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"Designation\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Designation\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"Email\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Email\"\r\n          onChange={handleAddFormChange}\r\n        /><br/>\r\n        <input\r\n          type=\"text\"\r\n          name=\"Name\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Name\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"dob\"\r\n          required=\"required\"\r\n          placeholder=\"Enter DOB\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"phoneNumber\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Phone Number\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpLeave\\Leave.js",["220","221","222","223","224","225","226","227","228","229","230"],"import React, { useState, Fragment } from \"react\";\r\nimport \"../empTAB.css\";\r\nimport ReadOnlyRow from \"./ReadOnlyRow\";\r\nimport EditableRow from \"./EditableRow\"\r\nimport { useFirestoreConnect,useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nconst App = () => {\r\n  const emp= useSelector(state=>state.firestore.ordered.Leaves);\r\n  const firestore=useFirestore();\r\n  let knt=0;\r\n  useFirestoreConnect([\r\n    {\r\n      collection:\"Leaves\",\r\n    },\r\n  ]);\r\n  const [contacts, setContacts] = useState(emp);\r\n  const [addFormData, setAddFormData] = useState({\r\n    duration: \"\",\r\n    from: \"\",\r\n    status: \"\",\r\n    UserID:\"\"\r\n  });\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    duration: \"\",\r\n    from: \"\",\r\n    status: \"\",\r\n    UserID:\"\"\r\n  });\r\n\r\n  const [editContactId, setEditContactId] = useState(null);\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setAddFormData(newFormData);\r\n  };\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newContact = {\r\n        duration: addFormData.duration,\r\n        from: addFormData.from,\r\n        status: addFormData.status,\r\n        UserID: addFormData.UserID\r\n    };\r\n    firestore.collection(\"Leaves\").add(newContact);\r\n  };\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedContact = {\r\n        duration: editFormData.duration,\r\n        from: editFormData.from,\r\n        status: editFormData.status,\r\n        UserID: editFormData.UserID\r\n    };\r\n\r\n    //const newContacts = [...contacts];\r\n\r\n    //const index = contacts.findIndex((contact) => contact.id === editContactId);\r\n\r\n    //newContacts[index] = editedContact;\r\n    firestore.collection(\"Leaves\").doc(editContactId).update(editedContact);\r\n    //setContacts(newContacts);\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleEditClick = (event, contact) => {\r\n    event.preventDefault();\r\n    setEditContactId(contact.id);\r\n    let id=contact.id;\r\n    let formValues;\r\n    const docref=firestore.collection(\"Leaves\").doc(id).update({\"status\":\"APPROVED\"});\r\n    setEditFormData(formValues);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (contactId) => {\r\n    //const newContacts = [...contacts];\r\n    const docref=firestore.collection(\"Leaves\").doc(contactId).update({\"status\":\"REJECTED\"});\r\n  };\r\n  \r\n  console.log(emp);\r\n  \r\n  if(!emp)\r\n    return <h1>loading</h1>\r\n    var empp=emp.filter(s=>{if(s.status.toUpperCase()===\"PENDING\") return s;})\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={handleEditFormSubmit}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>UserId</th>\r\n              <th>Duration</th>\r\n              <th>Status</th>\r\n              <th>From</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {empp.map((contact) => (\r\n              <Fragment>\r\n                {editContactId === contact.id ? (\r\n                  <ReadOnlyRow\r\n                  contact={contact}\r\n                  handleEditClick={handleEditClick}\r\n                  handleDeleteClick={handleDeleteClick}\r\n                />\r\n                ) : (\r\n                  <ReadOnlyRow\r\n                    contact={contact}\r\n                    handleEditClick={handleEditClick}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EditProfile\\Emp_profile.js",["231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246"],"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\Salary\\adminSalary.js",["247","248","249","250","251"],"import React, { useState, Fragment } from \"react\";\r\nimport \"../empTAB.css\";\r\nimport ReadOnlyRow from \"./ReadOnlyRow\"\r\nimport EditableRow from \"./EditableRow\"\r\nimport { useFirestoreConnect,useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nconst App = () => {\r\n  const emp= useSelector(state=>state.firestore.ordered.Salary);\r\n  const firestore=useFirestore();\r\n  let knt=0;\r\n  useFirestoreConnect([\r\n    {\r\n      collection:\"Salary\",\r\n    },\r\n  ]);\r\n  const [contacts, setContacts] = useState(emp);\r\n  const [addFormData, setAddFormData] = useState({\r\n    Designation:\"\",\r\n    salary:\"\"\r\n  });\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    Designation:\"\",\r\n    salary:\"\"\r\n  });\r\n\r\n  const [editContactId, setEditContactId] = useState(null);\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setAddFormData(newFormData);\r\n  };\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newContact = {\r\n      Designation:addFormData.Designation,\r\n      salary:addFormData.salary\r\n    };\r\n    firestore.collection(\"Salary\").add(newContact);\r\n  };\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedContact = {\r\n      Designation:editFormData.Designation,\r\n      salary:editFormData.salary\r\n    };\r\n\r\n    firestore.collection(\"Salary\").doc(editContactId).update(editedContact);\r\n\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleEditClick = (event, contact) => {\r\n    event.preventDefault();\r\n    setEditContactId(contact.id);\r\n    let id=contact.id;\r\n    let formValues;\r\n    if(knt==0){\r\n      formValues = {\r\n        Designation:contact.Designation,\r\n        salary:contact.salary,\r\n      };\r\n      knt=1;\r\n    }\r\n    else{\r\n      formValues = {\r\n        Designation:editFormData.Designation,\r\n        salary:editFormData.salary,\r\n      };\r\n    }\r\n    setEditFormData(formValues);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (contactId) => {\r\n\r\n    const docref=firestore.collection(\"Salary\").doc(contactId).delete();\r\n\r\n  };\r\n  \r\n  console.log(emp);\r\n  \r\n  if(!emp)\r\n    return <h3>loading..</h3>\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"form-box\" onSubmit={handleEditFormSubmit}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Designation</th>\r\n              <th>Salary</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {emp.map((contact) => (\r\n              <Fragment>\r\n                {editContactId === contact.id ? (\r\n                  <EditableRow\r\n                    editFormData={editFormData}\r\n                    handleEditFormChange={handleEditFormChange}\r\n                    handleCancelClick={handleCancelClick}\r\n                  />\r\n                ) : (\r\n                  <ReadOnlyRow\r\n                    contact={contact}\r\n                    handleEditClick={handleEditClick}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n\r\n      <h2>Add a Contact</h2>\r\n      <form className=\"form-editEmp\" onSubmit={handleAddFormSubmit}>\r\n      <input\r\n          type=\"text\"\r\n          name=\"Designation\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Designation...\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"salary\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Salary...\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\Schedule\\EmpSchedule.js",["252","253","254","255","256"],"import React, { useState, Fragment } from \"react\";\r\nimport \"../empTAB.css\";\r\nimport ReadOnlyRow from \"./ReadOnlyRow\";\r\nimport EditableRow from \"./EditableRow\"\r\nimport { useFirestoreConnect,useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nconst App = () => {\r\n  const emp= useSelector(state=>state.firestore.ordered.Schedule);\r\n  const firestore=useFirestore();\r\n  let knt=0;\r\n  useFirestoreConnect([\r\n    {\r\n      collection:\"Schedule\",\r\n    },\r\n  ]);\r\n  const [contacts, setContacts] = useState(emp);\r\n  const [addFormData, setAddFormData] = useState({\r\n    sid: \"\",\r\n    work_hrs: \"\",\r\n    status: \"\",\r\n    date: \"\",\r\n    UserID:\"\"\r\n  });\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    sid: \"\",\r\n    work_hrs: \"\",\r\n    status: \"\",\r\n    date: \"\",\r\n    UserID:\"\"\r\n  });\r\n\r\n  const [editContactId, setEditContactId] = useState(null);\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setAddFormData(newFormData);\r\n  };\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newContact = {\r\n        sid: addFormData.sid,\r\n        work_hrs: addFormData.work_hrs,\r\n        status: addFormData.status,\r\n        date: addFormData.date,\r\n        UserID: addFormData.UserID\r\n    };\r\n    firestore.collection(\"Schedule\").add(newContact);\r\n  };\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedContact = {\r\n        sid: editFormData.sid,\r\n        work_hrs: editFormData.work_hrs,\r\n        status: editFormData.status,\r\n        date: editFormData.date,\r\n        UserID: editFormData.UserID\r\n    };\r\n\r\n    //const newContacts = [...contacts];\r\n\r\n    //const index = contacts.findIndex((contact) => contact.id === editContactId);\r\n\r\n    //newContacts[index] = editedContact;\r\n    firestore.collection(\"Schedule\").doc(editContactId).update(editedContact);\r\n    //setContacts(newContacts);\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleEditClick = (event, contact) => {\r\n    event.preventDefault();\r\n    setEditContactId(contact.id);\r\n    let id=contact.id;\r\n    let formValues;\r\n    if(knt==0){\r\n      formValues= {\r\n        sid: contact.sid,\r\n        work_hrs: contact.work_hrs,\r\n        status: contact.status,\r\n        date: contact.date,\r\n        UserID: contact.UserID\r\n      };\r\n      knt=1;\r\n    }\r\n    else{\r\n      formValues= {\r\n          sid: editFormData.sid,\r\n          work_hrs: editFormData.work_hrs,\r\n          status: editFormData.status,\r\n          date: editFormData.date,\r\n          UserID: editFormData.UserID\r\n      };\r\n    }\r\n    setEditFormData(formValues);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (contactId) => {\r\n    //const newContacts = [...contacts];\r\n    const docref=firestore.collection(\"Schedule\").doc(contactId).delete();\r\n   // const index = contacts.findIndex((contact) => contact.id === contactId);\r\n\r\n    //newContacts.splice(index, 1);\r\n\r\n    //setContacts(newContacts);\r\n  };\r\n  \r\n  console.log(emp);\r\n  \r\n  if(!emp)\r\n    return <h1>loading</h1>\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"form-box\" onSubmit={handleEditFormSubmit}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>UserId</th>\r\n              <th>SID</th>\r\n              <th>Work Hours</th>\r\n              <th>Status</th>\r\n              <th>Date</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {emp.map((contact) => (\r\n              <Fragment>\r\n                {editContactId === contact.id ? (\r\n                  <EditableRow\r\n                    editFormData={editFormData}\r\n                    handleEditFormChange={handleEditFormChange}\r\n                    handleCancelClick={handleCancelClick}\r\n                  />\r\n                ) : (\r\n                  <ReadOnlyRow\r\n                    contact={contact}\r\n                    handleEditClick={handleEditClick}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n\r\n      <h2>Schedule a Day</h2>\r\n      <form className=\"form-editEmp\" onSubmit={handleAddFormSubmit}>\r\n      <input\r\n          type=\"text\"\r\n          name=\"UserID\"\r\n          required=\"required\"\r\n          placeholder=\"Enter UserID...\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"sid\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Sid...\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"work_hrs\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Working hours..\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"status\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Status...\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"date\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Date...\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\Navbar.js",[],"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\NavbarEmp.js",[],"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpSalary\\empSalary.js",["257","258","259","260"],"import React, { useState, Fragment } from \"react\";\r\nimport \"../empTAB.css\";\r\nimport { useFirestoreConnect,useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nconst App = () => {\r\n  const sal= useSelector(state=>state.firestore.ordered.Salary);\r\n  const emp= useSelector(state=>state.firestore.ordered.Emp_Details);\r\n  const firestore=useFirestore();\r\n  let knt=0;\r\n  useFirestoreConnect([\r\n    {\r\n      collection:\"Salary\",\r\n    },\r\n  ]);\r\n  useFirestoreConnect([\r\n    {\r\n      collection:\"Emp_Details\",\r\n    },\r\n  ]);\r\n  \r\n  if(!emp || !sal)\r\n    return <h3>loading..</h3>\r\n    var designation;\r\n    emp.forEach(element => {\r\n      if(element.UserID===localStorage.getItem(\"Email\"))\r\n          designation=element.Designation;\r\n    });\r\n    var salary;\r\n    sal.forEach(e=>{\r\n      if(e.Designation.toUpperCase()===designation.toUpperCase())\r\n        salary=e.salary;\r\n    })\r\n    console.log(salary);\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>YOUR SALARY</h1><h1>{salary}</h1>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpAttendance\\ReadOnlyRow.js",[],"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpSchedule\\ReadOnlyRow.js",[],"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpAttendance\\EditableRow.js",[],"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpLeave\\ReadOnlyRow.js",["261"],"import { color } from \"@mui/system\";\r\nimport React from \"react\";\r\nimport \"../empTAB.css\";\r\nconst ReadOnlyRow = ({ contact, handleEditClick, handleDeleteClick }) => {\r\n  return (\r\n    <tr>\r\n      <td>{contact.UserID}</td>\r\n      <td>{contact.duration}</td>\r\n      <td>{contact.status}</td>\r\n      <td>{contact.from}</td>\r\n      \r\n      <td>\r\n        <button\r\n          type=\"button\"\r\n          onClick={(event) => handleEditClick(event, contact)}\r\n          style={{backgroundColor:\"green\"}}\r\n        >\r\n          Accept\r\n        </button>\r\n        <button type=\"button\" onClick={() => handleDeleteClick(contact.id)} style={{backgroundColor:\"red\"}}>\r\n          Ignore\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ReadOnlyRow;","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpEdit\\ReadOnlyRow.js",[],"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpEdit\\EditableRow.js",[],"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpSchedule\\EditableRow.js",[],"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EmpLeave\\EditableRow.js",[],"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EditProfile\\editform.js",[],"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EditProfile\\EditableRow.js",[],"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\Schedule\\EditableRow.js",[],"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\EditProfile\\ReadOnlyRow.js",[],"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\Salary\\ReadOnlyRow.js",[],"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\Salary\\EditableRow.js",[],"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\Schedule\\ReadOnlyRow.js",[],"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\Leaves\\Leave.js",["262","263","264","265","266","267","268","269","270"],"import React, { useState, Fragment } from \"react\";\r\nimport \"../empTAB.css\";\r\nimport ReadOnlyRow from \"./ReadOnlyRow\";\r\nimport EditableRow from \"./EditableRow\"\r\nimport { useFirestoreConnect,useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nconst App = () => {\r\n  const emp= useSelector(state=>state.firestore.ordered.Leaves);\r\n  const firestore=useFirestore();\r\n  let knt=0;\r\n  useFirestoreConnect([\r\n    {\r\n      collection:\"Leaves\",\r\n    },\r\n  ]);\r\n  const [contacts, setContacts] = useState(emp);\r\n  const [addFormData, setAddFormData] = useState({\r\n    duration: \"\",\r\n    from: \"\",\r\n    status: \"\",\r\n    UserID:\"\"\r\n  });\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    duration: \"\",\r\n    from: \"\",\r\n    status: \"\",\r\n    UserID:\"\"\r\n  });\r\n\r\n  const [editContactId, setEditContactId] = useState(null);\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setAddFormData(newFormData);\r\n  };\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newContact = {\r\n        duration: addFormData.duration,\r\n        from: addFormData.from,\r\n        status: \"pending\",\r\n        UserID: localStorage.getItem(\"Email\")\r\n    };\r\n    firestore.collection(\"Leaves\").add(newContact);\r\n  };\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedContact = {\r\n        duration: editFormData.duration,\r\n        from: editFormData.from,\r\n        status: editFormData.status,\r\n        UserID: editFormData.UserID\r\n    };\r\n\r\n    //const newContacts = [...contacts];\r\n\r\n    //const index = contacts.findIndex((contact) => contact.id === editContactId);\r\n\r\n    //newContacts[index] = editedContact;\r\n    firestore.collection(\"Leaves\").doc(editContactId).update(editedContact);\r\n    //setContacts(newContacts);\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleEditClick = (event, contact) => {\r\n    event.preventDefault();\r\n    setEditContactId(contact.id);\r\n    let id=contact.id;\r\n    let formValues;\r\n    const docref=firestore.collection(\"Leaves\").doc(id).update({\"status\":\"APPROVED\"});\r\n    setEditFormData(formValues);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (contactId) => {\r\n    //const newContacts = [...contacts];\r\n    const docref=firestore.collection(\"Leaves\").doc(contactId).update({\"status\":\"REJECTED\"});\r\n  };\r\n  \r\n  console.log(emp);\r\n  \r\n  if(!emp)\r\n    return <h1>loading</h1>\r\n    var empp=emp.filter(s=>{if(s.UserID===localStorage.getItem(\"Email\")) return s;})\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={handleEditFormSubmit}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              \r\n              <th>Duration</th>\r\n              <th>Status</th>\r\n              <th>From</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {empp.map((contact) => (\r\n              <Fragment>\r\n                {editContactId === contact.id ? (\r\n                  <ReadOnlyRow\r\n                  contact={contact}\r\n                  handleEditClick={handleEditClick}\r\n                  handleDeleteClick={handleDeleteClick}\r\n                />\r\n                ) : (\r\n                  <ReadOnlyRow\r\n                    contact={contact}\r\n                    handleEditClick={handleEditClick}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n\r\n      <h2>Schedule a Leave</h2>\r\n      <form className=\"form-editEmp\" onSubmit={handleAddFormSubmit}>\r\n      <input\r\n          type=\"date\"\r\n          name=\"from\"\r\n          required=\"required\"\r\n          placeholder=\"Enter from date\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"duration\"\r\n          required=\"required\"\r\n          placeholder=\"Enter duration\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        \r\n        \r\n        \r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\Leaves\\EditableRow.js",[],"C:\\Users\\Kartik\\Documents\\GitHub\\empPayroll2\\src\\components\\Leaves\\ReadOnlyRow.js",["271"],"import { color } from \"@mui/system\";\r\nimport React from \"react\";\r\nimport \"../empTAB.css\";\r\nconst ReadOnlyRow = ({ contact, handleEditClick, handleDeleteClick }) => {\r\n  return (\r\n    <tr>\r\n      <td>{contact.duration}</td>\r\n      <td>{contact.status}</td>\r\n      <td>{contact.from}</td>\r\n      \r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ReadOnlyRow;",{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","severity":1,"message":"277","line":7,"column":40,"nodeType":"278","messageId":"279","endLine":7,"endColumn":47},{"ruleId":"276","severity":1,"message":"280","line":9,"column":3,"nodeType":"278","messageId":"279","endLine":9,"endColumn":29},{"ruleId":"276","severity":1,"message":"281","line":2,"column":8,"nodeType":"278","messageId":"279","endLine":2,"endColumn":14},{"ruleId":"276","severity":1,"message":"282","line":3,"column":9,"nodeType":"278","messageId":"279","endLine":3,"endColumn":22},{"ruleId":"276","severity":1,"message":"283","line":3,"column":24,"nodeType":"278","messageId":"279","endLine":3,"endColumn":30},{"ruleId":"276","severity":1,"message":"284","line":3,"column":32,"nodeType":"278","messageId":"279","endLine":3,"endColumn":37},{"ruleId":"276","severity":1,"message":"285","line":4,"column":8,"nodeType":"278","messageId":"279","endLine":4,"endColumn":13},{"ruleId":"276","severity":1,"message":"286","line":7,"column":8,"nodeType":"278","messageId":"279","endLine":7,"endColumn":17},{"ruleId":"276","severity":1,"message":"287","line":8,"column":8,"nodeType":"278","messageId":"279","endLine":8,"endColumn":16},{"ruleId":"276","severity":1,"message":"288","line":9,"column":8,"nodeType":"278","messageId":"279","endLine":9,"endColumn":16},{"ruleId":"276","severity":1,"message":"289","line":10,"column":8,"nodeType":"278","messageId":"279","endLine":10,"endColumn":18},{"ruleId":"276","severity":1,"message":"290","line":13,"column":8,"nodeType":"278","messageId":"279","endLine":13,"endColumn":17},{"ruleId":"276","severity":1,"message":"291","line":14,"column":8,"nodeType":"278","messageId":"279","endLine":14,"endColumn":15},{"ruleId":"276","severity":1,"message":"292","line":15,"column":8,"nodeType":"278","messageId":"279","endLine":15,"endColumn":14},{"ruleId":"276","severity":1,"message":"293","line":16,"column":8,"nodeType":"278","messageId":"279","endLine":16,"endColumn":15},{"ruleId":"276","severity":1,"message":"294","line":17,"column":8,"nodeType":"278","messageId":"279","endLine":17,"endColumn":15},{"ruleId":"276","severity":1,"message":"295","line":86,"column":9,"nodeType":"278","messageId":"279","endLine":86,"endColumn":18},{"ruleId":"276","severity":1,"message":"296","line":91,"column":10,"nodeType":"278","messageId":"279","endLine":91,"endColumn":14},{"ruleId":"297","severity":1,"message":"298","line":131,"column":18,"nodeType":"299","messageId":"300","endLine":131,"endColumn":20},{"ruleId":"297","severity":1,"message":"298","line":138,"column":14,"nodeType":"299","messageId":"300","endLine":138,"endColumn":16},{"ruleId":"276","severity":1,"message":"301","line":149,"column":9,"nodeType":"278","messageId":"279","endLine":149,"endColumn":15},{"ruleId":"276","severity":1,"message":"281","line":2,"column":8,"nodeType":"278","messageId":"279","endLine":2,"endColumn":14},{"ruleId":"276","severity":1,"message":"291","line":14,"column":8,"nodeType":"278","messageId":"279","endLine":14,"endColumn":15},{"ruleId":"276","severity":1,"message":"292","line":15,"column":8,"nodeType":"278","messageId":"279","endLine":15,"endColumn":14},{"ruleId":"276","severity":1,"message":"294","line":17,"column":8,"nodeType":"278","messageId":"279","endLine":17,"endColumn":15},{"ruleId":"302","severity":1,"message":"303","line":35,"column":6,"nodeType":"304","messageId":"305","endLine":35,"endColumn":19},{"ruleId":"302","severity":1,"message":"306","line":55,"column":7,"nodeType":"304","messageId":"305","endLine":55,"endColumn":18},{"ruleId":"276","severity":1,"message":"285","line":4,"column":8,"nodeType":"278","messageId":"279","endLine":4,"endColumn":13},{"ruleId":"276","severity":1,"message":"286","line":7,"column":8,"nodeType":"278","messageId":"279","endLine":7,"endColumn":17},{"ruleId":"276","severity":1,"message":"287","line":8,"column":8,"nodeType":"278","messageId":"279","endLine":8,"endColumn":16},{"ruleId":"276","severity":1,"message":"288","line":9,"column":8,"nodeType":"278","messageId":"279","endLine":9,"endColumn":16},{"ruleId":"276","severity":1,"message":"289","line":10,"column":8,"nodeType":"278","messageId":"279","endLine":10,"endColumn":18},{"ruleId":"276","severity":1,"message":"290","line":13,"column":8,"nodeType":"278","messageId":"279","endLine":13,"endColumn":17},{"ruleId":"276","severity":1,"message":"307","line":4,"column":8,"nodeType":"278","messageId":"279","endLine":4,"endColumn":19},{"ruleId":"276","severity":1,"message":"308","line":16,"column":10,"nodeType":"278","messageId":"279","endLine":16,"endColumn":18},{"ruleId":"276","severity":1,"message":"309","line":16,"column":20,"nodeType":"278","messageId":"279","endLine":16,"endColumn":31},{"ruleId":"276","severity":1,"message":"310","line":31,"column":9,"nodeType":"278","messageId":"279","endLine":31,"endColumn":28},{"ruleId":"276","severity":1,"message":"311","line":43,"column":9,"nodeType":"278","messageId":"279","endLine":43,"endColumn":29},{"ruleId":"276","severity":1,"message":"312","line":55,"column":9,"nodeType":"278","messageId":"279","endLine":55,"endColumn":28},{"ruleId":"276","severity":1,"message":"313","line":83,"column":9,"nodeType":"278","messageId":"279","endLine":83,"endColumn":11},{"ruleId":"297","severity":1,"message":"298","line":85,"column":11,"nodeType":"299","messageId":"300","endLine":85,"endColumn":13},{"ruleId":"276","severity":1,"message":"314","line":103,"column":9,"nodeType":"278","messageId":"279","endLine":103,"endColumn":26},{"ruleId":"276","severity":1,"message":"315","line":109,"column":11,"nodeType":"278","messageId":"279","endLine":109,"endColumn":17},{"ruleId":"316","severity":1,"message":"317","line":121,"column":26,"nodeType":"318","messageId":"319","endLine":121,"endColumn":28},{"ruleId":"297","severity":1,"message":"298","line":121,"column":40,"nodeType":"299","messageId":"300","endLine":121,"endColumn":42},{"ruleId":"276","severity":1,"message":"320","line":7,"column":10,"nodeType":"278","messageId":"279","endLine":7,"endColumn":28},{"ruleId":"276","severity":1,"message":"308","line":19,"column":10,"nodeType":"278","messageId":"279","endLine":19,"endColumn":18},{"ruleId":"276","severity":1,"message":"309","line":19,"column":20,"nodeType":"278","messageId":"279","endLine":19,"endColumn":31},{"ruleId":"276","severity":1,"message":"310","line":38,"column":9,"nodeType":"278","messageId":"279","endLine":38,"endColumn":28},{"ruleId":"276","severity":1,"message":"311","line":50,"column":9,"nodeType":"278","messageId":"279","endLine":50,"endColumn":29},{"ruleId":"276","severity":1,"message":"312","line":62,"column":9,"nodeType":"278","messageId":"279","endLine":62,"endColumn":28},{"ruleId":"276","severity":1,"message":"313","line":99,"column":9,"nodeType":"278","messageId":"279","endLine":99,"endColumn":11},{"ruleId":"297","severity":1,"message":"298","line":101,"column":11,"nodeType":"299","messageId":"300","endLine":101,"endColumn":13},{"ruleId":"276","severity":1,"message":"314","line":123,"column":9,"nodeType":"278","messageId":"279","endLine":123,"endColumn":26},{"ruleId":"276","severity":1,"message":"315","line":129,"column":11,"nodeType":"278","messageId":"279","endLine":129,"endColumn":17},{"ruleId":"316","severity":1,"message":"317","line":141,"column":26,"nodeType":"318","messageId":"319","endLine":141,"endColumn":28},{"ruleId":"297","severity":1,"message":"298","line":141,"column":40,"nodeType":"299","messageId":"300","endLine":141,"endColumn":42},{"ruleId":"276","severity":1,"message":"308","line":16,"column":10,"nodeType":"278","messageId":"279","endLine":16,"endColumn":18},{"ruleId":"276","severity":1,"message":"309","line":16,"column":20,"nodeType":"278","messageId":"279","endLine":16,"endColumn":31},{"ruleId":"276","severity":1,"message":"313","line":110,"column":9,"nodeType":"278","messageId":"279","endLine":110,"endColumn":11},{"ruleId":"297","severity":1,"message":"298","line":112,"column":11,"nodeType":"299","messageId":"300","endLine":112,"endColumn":13},{"ruleId":"276","severity":1,"message":"315","line":144,"column":11,"nodeType":"278","messageId":"279","endLine":144,"endColumn":17},{"ruleId":"276","severity":1,"message":"307","line":4,"column":8,"nodeType":"278","messageId":"279","endLine":4,"endColumn":19},{"ruleId":"276","severity":1,"message":"321","line":10,"column":7,"nodeType":"278","messageId":"279","endLine":10,"endColumn":10},{"ruleId":"276","severity":1,"message":"308","line":16,"column":10,"nodeType":"278","messageId":"279","endLine":16,"endColumn":18},{"ruleId":"276","severity":1,"message":"309","line":16,"column":20,"nodeType":"278","messageId":"279","endLine":16,"endColumn":31},{"ruleId":"276","severity":1,"message":"310","line":33,"column":9,"nodeType":"278","messageId":"279","endLine":33,"endColumn":28},{"ruleId":"276","severity":1,"message":"311","line":45,"column":9,"nodeType":"278","messageId":"279","endLine":45,"endColumn":29},{"ruleId":"276","severity":1,"message":"312","line":57,"column":9,"nodeType":"278","messageId":"279","endLine":57,"endColumn":28},{"ruleId":"276","severity":1,"message":"315","line":94,"column":11,"nodeType":"278","messageId":"279","endLine":94,"endColumn":17},{"ruleId":"276","severity":1,"message":"314","line":98,"column":9,"nodeType":"278","messageId":"279","endLine":98,"endColumn":26},{"ruleId":"276","severity":1,"message":"315","line":104,"column":11,"nodeType":"278","messageId":"279","endLine":104,"endColumn":17},{"ruleId":"316","severity":1,"message":"317","line":111,"column":26,"nodeType":"318","messageId":"319","endLine":111,"endColumn":28},{"ruleId":"276","severity":1,"message":"322","line":1,"column":27,"nodeType":"278","messageId":"279","endLine":1,"endColumn":35},{"ruleId":"276","severity":1,"message":"323","line":4,"column":8,"nodeType":"278","messageId":"279","endLine":4,"endColumn":19},{"ruleId":"276","severity":1,"message":"307","line":5,"column":8,"nodeType":"278","messageId":"279","endLine":5,"endColumn":19},{"ruleId":"276","severity":1,"message":"308","line":23,"column":10,"nodeType":"278","messageId":"279","endLine":23,"endColumn":18},{"ruleId":"276","severity":1,"message":"309","line":23,"column":20,"nodeType":"278","messageId":"279","endLine":23,"endColumn":31},{"ruleId":"276","severity":1,"message":"310","line":49,"column":9,"nodeType":"278","messageId":"279","endLine":49,"endColumn":28},{"ruleId":"276","severity":1,"message":"312","line":73,"column":9,"nodeType":"278","messageId":"279","endLine":73,"endColumn":28},{"ruleId":"276","severity":1,"message":"324","line":88,"column":9,"nodeType":"278","messageId":"279","endLine":88,"endColumn":29},{"ruleId":"276","severity":1,"message":"325","line":111,"column":9,"nodeType":"278","messageId":"279","endLine":111,"endColumn":24},{"ruleId":"276","severity":1,"message":"313","line":114,"column":9,"nodeType":"278","messageId":"279","endLine":114,"endColumn":11},{"ruleId":"297","severity":1,"message":"298","line":116,"column":11,"nodeType":"299","messageId":"300","endLine":116,"endColumn":13},{"ruleId":"276","severity":1,"message":"314","line":142,"column":9,"nodeType":"278","messageId":"279","endLine":142,"endColumn":26},{"ruleId":"276","severity":1,"message":"326","line":146,"column":9,"nodeType":"278","messageId":"279","endLine":146,"endColumn":26},{"ruleId":"276","severity":1,"message":"315","line":148,"column":11,"nodeType":"278","messageId":"279","endLine":148,"endColumn":17},{"ruleId":"276","severity":1,"message":"327","line":156,"column":9,"nodeType":"278","messageId":"279","endLine":156,"endColumn":17},{"ruleId":"297","severity":1,"message":"298","line":166,"column":20,"nodeType":"299","messageId":"300","endLine":166,"endColumn":22},{"ruleId":"276","severity":1,"message":"308","line":16,"column":10,"nodeType":"278","messageId":"279","endLine":16,"endColumn":18},{"ruleId":"276","severity":1,"message":"309","line":16,"column":20,"nodeType":"278","messageId":"279","endLine":16,"endColumn":31},{"ruleId":"276","severity":1,"message":"313","line":79,"column":9,"nodeType":"278","messageId":"279","endLine":79,"endColumn":11},{"ruleId":"297","severity":1,"message":"298","line":81,"column":11,"nodeType":"299","messageId":"300","endLine":81,"endColumn":13},{"ruleId":"276","severity":1,"message":"315","line":103,"column":11,"nodeType":"278","messageId":"279","endLine":103,"endColumn":17},{"ruleId":"276","severity":1,"message":"308","line":16,"column":10,"nodeType":"278","messageId":"279","endLine":16,"endColumn":18},{"ruleId":"276","severity":1,"message":"309","line":16,"column":20,"nodeType":"278","messageId":"279","endLine":16,"endColumn":31},{"ruleId":"276","severity":1,"message":"313","line":96,"column":9,"nodeType":"278","messageId":"279","endLine":96,"endColumn":11},{"ruleId":"297","severity":1,"message":"298","line":98,"column":11,"nodeType":"299","messageId":"300","endLine":98,"endColumn":13},{"ruleId":"276","severity":1,"message":"315","line":126,"column":11,"nodeType":"278","messageId":"279","endLine":126,"endColumn":17},{"ruleId":"276","severity":1,"message":"328","line":1,"column":17,"nodeType":"278","messageId":"279","endLine":1,"endColumn":25},{"ruleId":"276","severity":1,"message":"322","line":1,"column":27,"nodeType":"278","messageId":"279","endLine":1,"endColumn":35},{"ruleId":"276","severity":1,"message":"329","line":8,"column":9,"nodeType":"278","messageId":"279","endLine":8,"endColumn":18},{"ruleId":"276","severity":1,"message":"321","line":9,"column":7,"nodeType":"278","messageId":"279","endLine":9,"endColumn":10},{"ruleId":"276","severity":1,"message":"330","line":1,"column":10,"nodeType":"278","messageId":"279","endLine":1,"endColumn":15},{"ruleId":"276","severity":1,"message":"307","line":4,"column":8,"nodeType":"278","messageId":"279","endLine":4,"endColumn":19},{"ruleId":"276","severity":1,"message":"321","line":10,"column":7,"nodeType":"278","messageId":"279","endLine":10,"endColumn":10},{"ruleId":"276","severity":1,"message":"308","line":16,"column":10,"nodeType":"278","messageId":"279","endLine":16,"endColumn":18},{"ruleId":"276","severity":1,"message":"309","line":16,"column":20,"nodeType":"278","messageId":"279","endLine":16,"endColumn":31},{"ruleId":"276","severity":1,"message":"311","line":45,"column":9,"nodeType":"278","messageId":"279","endLine":45,"endColumn":29},{"ruleId":"276","severity":1,"message":"315","line":94,"column":11,"nodeType":"278","messageId":"279","endLine":94,"endColumn":17},{"ruleId":"276","severity":1,"message":"314","line":98,"column":9,"nodeType":"278","messageId":"279","endLine":98,"endColumn":26},{"ruleId":"276","severity":1,"message":"315","line":104,"column":11,"nodeType":"278","messageId":"279","endLine":104,"endColumn":17},{"ruleId":"316","severity":1,"message":"317","line":111,"column":26,"nodeType":"318","messageId":"319","endLine":111,"endColumn":28},{"ruleId":"276","severity":1,"message":"330","line":1,"column":10,"nodeType":"278","messageId":"279","endLine":1,"endColumn":15},"no-native-reassign",["331"],"no-negated-in-lhs",["332"],"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","'ReactReduxFirebaseProvider' is defined but never used.","'Navbar' is defined but never used.","'BrowserRouter' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Login' is defined but never used.","'EmpSalary' is defined but never used.","'EmpAtten' is defined but never used.","'Emp_Prof' is defined but never used.","'Emp_OwnSch' is defined but never used.","'NavbarEmp' is defined but never used.","'Salary1' is defined but never used.","'EmpSch' is defined but never used.","'Leaves1' is defined but never used.","'EmpEdit' is defined but never used.","'adminUser' is assigned a value but never used.","'user' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Logout' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Emp_OwnSch must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Emp_Prof must be in PascalCase or SCREAMING_SNAKE_CASE","'EditableRow' is defined but never used.","'contacts' is assigned a value but never used.","'setContacts' is assigned a value but never used.","'handleAddFormChange' is assigned a value but never used.","'handleEditFormChange' is assigned a value but never used.","'handleAddFormSubmit' is assigned a value but never used.","'id' is assigned a value but never used.","'handleCancelClick' is assigned a value but never used.","'docref' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'EmojiPeopleRounded' is defined but never used.","'knt' is assigned a value but never used.","'Fragment' is defined but never used.","'ReadOnlyRow' is defined but never used.","'handleEditFormSubmit' is assigned a value but never used.","'handleEditClick' is assigned a value but never used.","'handleDeleteClick' is assigned a value but never used.","'redirect' is assigned a value but never used.","'useState' is defined but never used.","'firestore' is assigned a value but never used.","'color' is defined but never used.","no-global-assign","no-unsafe-negation"]