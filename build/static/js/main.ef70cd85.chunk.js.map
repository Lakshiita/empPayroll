{"version":3,"sources":["components/Navbar.js","store.js","components/EmpSalary/empSalary.js","components/EmpAttendance/ReadOnlyRow.js","components/EmpAttendance/Emp_Atten.js","components/EditProfile/editform.js","components/EditProfile/Emp_profile.js","components/EmpSchedule/ReadOnlyRow.js","components/EmpSchedule/EditableRow.js","components/EmpSchedule/EmpOwnSchedule.js","components/NavbarEmp.js","components/Salary/ReadOnlyRow.js","components/Salary/EditableRow.js","components/Salary/adminSalary.js","components/Schedule/ReadOnlyRow.js","components/Schedule/EditableRow.js","components/Schedule/EmpSchedule.js","components/EmpLeave/ReadOnlyRow.js","components/EmpLeave/Leave.js","components/EmpEdit/ReadOnlyRow.js","components/EmpEdit/EditableRow.js","components/EmpEdit/EmpEditDele.js","EmpDash.js","AdminDash.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","useState","showMediaIcons","className","to","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","rootReducer","combineReducers","firebaseReducer","firestoreReducer","store","createStore","composeWithDevTools","rrfProps","config","userProfile","useFirestoreForProfile","dispatch","createFirestoreInstance","App","designation","salary","sal","useSelector","state","ordered","Salary","emp","Emp_Details","useFirestore","useFirestoreConnect","collection","forEach","element","UserID","localStorage","getItem","Designation","e","toUpperCase","console","log","ReadOnlyRow","contact","handleEditClick","handleDeleteClick","Date","Status","Attendence","knt","editFormData","setEditFormData","editContactId","setEditContactId","event","preventDefault","id","formValues","contactId","doc","delete","empp","filter","s","onSubmit","editedContact","update","map","form","EditFormData","handleEditFormChange","handleEditFormSubmit","type","placeholder","disabled","value","name","Name","onChange","Email","Address","dob","phoneNumber","useHistory","user","fieldName","target","getAttribute","fieldValue","newFormData","sid","work_hrs","status","date","EditableRow","handleCancelClick","required","onClick","Schedule","addFormData","setAddFormData","handleAddFormChange","newContact","add","duration","from","style","backgroundColor","Leaves","newDat","password","Role","Home","NavbarEmp","Attendance","Editprofile","Logout","exact","path","Leave","Edit","k","LoginForm","Login","error","email","details","setDetails","class","htmlFor","Credentials","setUser","setError","EmpDash","flag","doc1","setItem","AdminDash","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef70cd85.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./navbar.css\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  const [showMediaIcons] = useState(false);\r\n  return (\r\n    <>\r\n      <nav className=\"main-nav\">\r\n        {/* 1st logo part  */}\r\n        <div className=\"logo\">\r\n          <h2>\r\n            <span>E</span>mployee\r\n            <span>P</span>ayroll\r\n          </h2>\r\n        </div>\r\n\r\n        {/* 2nd menu part  */}\r\n        <div\r\n          className={\r\n            showMediaIcons ? \"menu-link mobile-menu-link\" : \"menu-link\"\r\n          }>\r\n          <ul>\r\n            <li>\r\n              <NavLink to=\"/\">Admin Home</NavLink>\r\n            </li>\r\n            \r\n            <li>\r\n              \r\n              <NavLink to=\"/schedule\">Schedule</NavLink>\r\n            </li>\r\n            <li>\r\n              \r\n              <NavLink to=\"/salary\">Salary</NavLink>\r\n            </li>\r\n            <li>\r\n              \r\n              <NavLink to=\"/leave\">Leaves</NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              \r\n              <NavLink to=\"/edit\">Add/Delete</NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n      </nav>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore'; \r\n// <- needed if using firestore\r\n// import 'firebase/functions' // <- needed if using httpsCallable\r\nimport { createStore, combineReducers, compose } from 'redux'\r\nimport {\r\n  ReactReduxFirebaseProvider,\r\n  firebaseReducer\r\n} from 'react-redux-firebase'\r\n import { createFirestoreInstance, firestoreReducer } from 'redux-firestore' // <- needed if using firestore\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nconst fbConfig = {\r\n    apiKey: \"AIzaSyAoI3H2SdgbW5RuzquOOJPW-djkj9tedZA\",\r\n  authDomain: \"emp-payroll-153e4.firebaseapp.com\",\r\n  projectId: \"emp-payroll-153e4\",\r\n  storageBucket: \"emp-payroll-153e4.appspot.com\",\r\n  messagingSenderId: \"98286862311\",\r\n  appId: \"1:98286862311:web:afa408e2e53439d6a28742\",\r\n  measurementId: \"G-GLD6CG8N65\",\r\n}\r\n\r\n// react-redux-firebase config\r\nconst rrfConfig = {\r\n  userProfile: 'users',\r\n useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\r\n}\r\n\r\n// Initialize firebase instance\r\nfirebase.initializeApp(fbConfig)\r\n\r\n// Initialize other services on firebase instance\r\n firebase.firestore() // <- needed if using firestore\r\n// firebase.functions() // <- needed if using httpsCallable\r\n\r\n// Add firebase to reducers\r\nconst rootReducer = combineReducers({\r\n  firebase: firebaseReducer,\r\n   firestore: firestoreReducer // <- needed if using firestore\r\n})\r\n\r\n// Create store with reducers and initial state\r\nconst initialState = {}\r\nconst store = createStore(rootReducer, initialState,composeWithDevTools())\r\n\r\nexport const  rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n    createFirestoreInstance // <- needed if using firestore\r\n}\r\n\r\nexport default store;","import React, { useState, Fragment } from \"react\";\r\nimport \"../empTAB.css\";\r\nimport { useFirestoreConnect,useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nconst App = () => {\r\n  const sal= useSelector(state=>state.firestore.ordered.Salary);\r\n  const emp= useSelector(state=>state.firestore.ordered.Emp_Details);\r\n  const firestore=useFirestore();\r\n  let knt=0;\r\n  useFirestoreConnect([\r\n    {\r\n      collection:\"Salary\",\r\n    },\r\n  ]);\r\n  useFirestoreConnect([\r\n    {\r\n      collection:\"Emp_Details\",\r\n    },\r\n  ]);\r\n  \r\n  if(!emp)\r\n    return <h3>loading..</h3>\r\n    var designation;\r\n    emp.forEach(element => {\r\n      if(element.UserID===localStorage.getItem(\"Email\"))\r\n          designation=element.Designation;\r\n    });\r\n    var salary;\r\n    sal.forEach(e=>{\r\n      if(e.Designation.toUpperCase()===designation.toUpperCase())\r\n        salary=e.salary;\r\n    })\r\n    console.log(salary);\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>YOUR SALARY</h1><h1>{salary}</h1>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import React from \"react\";\r\nimport \"../empTAB.css\";\r\nconst ReadOnlyRow = ({ contact, handleEditClick, handleDeleteClick }) => {\r\n  return (\r\n    <tr>\r\n      <td>{contact.Date}</td>\r\n      <td>{contact.Status}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ReadOnlyRow;","import React, { useState, Fragment } from \"react\";\r\nimport \"../empTAB.css\";\r\nimport ReadOnlyRow from \"./ReadOnlyRow\";\r\nimport EditableRow from \"./EditableRow\";\r\nimport { useFirestoreConnect,useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nconst App = () => {\r\n  const emp= useSelector(state=>state.firestore.ordered.Attendence);\r\n  const firestore=useFirestore();\r\n  let knt=0;\r\n  useFirestoreConnect([\r\n    {\r\n      collection:\"Attendence\",\r\n    },\r\n  ]);\r\n  const [contacts, setContacts] = useState(emp);\r\n  const [addFormData, setAddFormData] = useState({\r\n    Date: \"\",\r\n    Status: \"\",\r\n    UserID:\"\"\r\n  });\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    Date: \"\",\r\n    Status: \"\",\r\n    UserID:\"\"\r\n  });\r\n\r\n  const [editContactId, setEditContactId] = useState(null);\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setAddFormData(newFormData);\r\n  };\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newContact = {\r\n        Date: addFormData.Date,\r\n        Status: addFormData.Status,\r\n        UserID: addFormData.UserID\r\n    };\r\n    firestore.collection(\"Attendence\").add(newContact);\r\n  };\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedContact = {\r\n        Date: editFormData.Date,\r\n        Status: editFormData.Status,\r\n        UserID: editFormData.UserID\r\n    };\r\n\r\n    firestore.collection(\"Attendence\").doc(editContactId).update(editedContact);\r\n    //setContacts(newContacts);\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleEditClick = (event, contact) => {\r\n    event.preventDefault();\r\n    setEditContactId(contact.id);\r\n    let id=contact.id;\r\n    let formValues;\r\n    if(knt==0){\r\n      formValues= {\r\n        Date: editFormData.Date,\r\n        Status: editFormData.Status,\r\n        UserID: editFormData.UserID\r\n      };\r\n      knt=1;\r\n    }\r\n    else{\r\n      formValues = {\r\n        Date: editFormData.Date,\r\n        Status: editFormData.Status,\r\n        UserID: editFormData.UserID\r\n      };\r\n    }\r\n    setEditFormData(formValues);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (contactId) => {\r\n    //const newContacts = [...contacts];\r\n    const docref=firestore.collection(\"Attendence\").doc(contactId).delete();\r\n   // const index = contacts.findIndex((contact) => contact.id === contactId);\r\n\r\n    //newContacts.splice(index, 1);\r\n\r\n    //setContacts(newContacts);\r\n  };\r\n  \r\n  console.log(emp);\r\n  \r\n  if(!emp)\r\n    return <h1>loading</h1>\r\n    var empp=emp.filter(s=>{if(s.UserID==localStorage.getItem(\"Email\")) return s;})\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"form-box\" onSubmit={handleEditFormSubmit}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {empp.map((contact) => (\r\n              <Fragment>\r\n                 \r\n                  <ReadOnlyRow\r\n                    contact={contact}\r\n                    handleEditClick={handleEditClick}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                  />\r\n                \r\n              </Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import React from \"react\";\r\n\r\nconst form = ({EditFormData,handleEditFormChange,handleEditFormSubmit}) =>{\r\n    \r\n    return(\r\n        <div>\r\n        <form >\r\n        <table>\r\n        <tr>\r\n            <td><input type=\"text\" placeholder=\"UserId\" disabled value={EditFormData.UserID} name=\"UserID\"\r\n               \r\n            /></td>\r\n        </tr>\r\n        <tr>\r\n            <td><input type=\"text\" placeholder=\"Name\" value={EditFormData.Name} name=\"Name\"\r\n               onChange={handleEditFormChange}\r\n            /></td>\r\n         </tr>   \r\n            <tr>\r\n            <td><input type=\"text\" placeholder=\"Designation\" disabled value={EditFormData.Designation} name=\"Designation\"\r\n                \r\n            /></td>\r\n            </tr>\r\n            <tr>\r\n            <td><input type=\"text\" placeholder=\"Email\" value={EditFormData.Email} name=\"Email\"\r\n                 onChange={handleEditFormChange}\r\n            /></td>\r\n            </tr>\r\n            <tr>\r\n            <td><input type=\"text\" placeholder=\"Address\" value={EditFormData.Address} name=\"Address\"\r\n                  onChange={handleEditFormChange}\r\n            /></td>\r\n            </tr>\r\n            <tr>\r\n            <td><input type=\"date\" placeholder=\"Date of Birth\" disabled value={EditFormData.dob} name=\"dob\"/></td>\r\n            </tr>\r\n            <tr>\r\n            <td><input type=\"phone\" placeholder=\"PhoneNumber\" value={EditFormData.phoneNumber} name=\"phoneNumber\"\r\n                 onChange={handleEditFormChange}\r\n            /></td>\r\n            </tr>\r\n            <tr>\r\n            <td><input type=\"button\" value=\"Edit\"  /></td>\r\n            </tr>\r\n            </table>\r\n        </form></div>\r\n    );\r\n}\r\n\r\nexport default form;","import React, { useState, Fragment } from \"react\";\r\nimport \"../empTAB.css\";\r\nimport ReadOnlyRow from \"./ReadOnlyRow\";\r\nimport EditableRow from \"./EditableRow\"\r\nimport { useFirestoreConnect,useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\n//import { Button, Card } from \"react-bootstrap\";//added\r\n//import 'bootstrap/dist/css/bootstrap.min.css'; //added\r\nimport { useHistory } from \"react-router\";\r\nimport Editform1 from \"./editform\";\r\nconst App = () => {\r\n  \r\n  const emp= useSelector(state=>state.firestore.ordered.Emp_Details);\r\n  const firestore=useFirestore();\r\n  useFirestoreConnect([\r\n    {\r\n      collection:\"Emp_Details\",\r\n    },\r\n  ]);\r\n  let knt=0;\r\n  \r\n  const [contacts, setContacts] = useState(emp);\r\n  const [addFormData, setAddFormData] = useState({\r\n    UserID: \"\",\r\n    Address: \"\",\r\n    Designation: \"\",\r\n    Email:\"\",\r\n    Name:\"\",\r\n    dob:\"\",\r\n    phoneNumber:\"\"\r\n  });\r\n  console.log(emp);\r\n  //const aloo = emp[0]; \r\n  \r\n  \r\n  const [editFormData, setEditFormData] = useState({\r\n    UserID: \"\",\r\n    Address: \"\",\r\n    Designation: \"\",\r\n    Email: \"\",\r\n    Name: \"\",\r\n    dob: \"\",\r\n    phoneNumber: \"\"\r\n  });\r\n  console.log(emp);\r\n  const [editContactId, setEditContactId] = useState(null);\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setAddFormData(newFormData);\r\n  };\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newContact = {\r\n        UserID: addFormData.UserID,\r\n        Address: addFormData.Address,\r\n        Designation: addFormData.Designation,\r\n        Email: addFormData.Email,\r\n        Name: addFormData.Name,\r\n        dob: addFormData.dob,\r\n        phoneNumber: addFormData.phoneNumber\r\n    };\r\n    firestore.collection(\"Emp_Details\").add(newContact);\r\n  };\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedContact = {\r\n        UserID: editFormData.UserID,\r\n        Address: editFormData.Address,\r\n        Designation: editFormData.Designation,\r\n        Email: editFormData.Email,\r\n        Name: editFormData.Name,\r\n        dob: editFormData.dob,\r\n        phoneNumber: editFormData.phoneNumber\r\n    };\r\n\r\n    //const newContacts = [...contacts];\r\n\r\n    //const index = contacts.findIndex((contact) => contact.id === editContactId);\r\n\r\n    //newContacts[index] = editedContact;\r\n    firestore.collection(\"Emp_Details\").doc(editContactId).update(editedContact);\r\n    //setContacts(newContacts);\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleEditClick = (event, contact) => {\r\n    event.preventDefault();\r\n    setEditContactId(contact.id);\r\n    let id=contact.id;\r\n    let formValues;\r\n    if(knt==0){\r\n      formValues= {\r\n        UserID: contact.UserID,\r\n        Address: contact.Address,\r\n        Designation: contact.Designation,\r\n        Email: contact.Email,\r\n        Name: contact.Name,\r\n        dob: contact.dob,\r\n        phoneNumber: contact.phoneNumber\r\n      };\r\n      knt=1;\r\n    }\r\n    else{\r\n      formValues = {\r\n          UserID: editFormData.UserID,\r\n          Address: editFormData.Address,\r\n          Designation: editFormData.Designation,\r\n          Email: editFormData.Email,\r\n          Name: editFormData.Name,\r\n          dob: editFormData.dob,\r\n          phoneNumber: editFormData.phoneNumber\r\n      };\r\n    }\r\n    setEditFormData(formValues);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (contactId) => {\r\n    //const newContacts = [...contacts];\r\n    const docref=firestore.collection(\"Emp_Details\").doc(contactId).delete();\r\n   // const index = contacts.findIndex((contact) => contact.id === contactId);\r\n\r\n    //newContacts.splice(index, 1);\r\n\r\n    //setContacts(newContacts);\r\n  };\r\n  const history = useHistory();\r\n  const redirect=()=>{\r\n    history.push('/editform');\r\n  }\r\n  console.log(emp);\r\n  \r\n  if(!emp)\r\n    return <h1>loading</h1>\r\n    var UserID=localStorage.getItem(\"Email\");\r\n    var user;\r\n    emp.forEach(doc=>{\r\n      if(doc.UserID==UserID)\r\n        user=doc;\r\n    })\r\n    console.log(user);\r\n  return (\r\n    <div>\r\n        <Editform1  EditFormData={user} handleEditFormChange={handleEditFormChange} \r\n       />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import React from \"react\";\r\nimport \"./empTAB.css\";\r\nconst ReadOnlyRow = ({ contact, handleEditClick, handleDeleteClick }) => {\r\n  return (\r\n    <tr>\r\n      <td>{contact.sid}</td>\r\n      <td>{contact.work_hrs}</td>\r\n      <td>{contact.status}</td>\r\n      <td>{contact.date}</td>\r\n      \r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ReadOnlyRow;","import React from \"react\";\r\n\r\nconst EditableRow = ({\r\n  editFormData,\r\n  handleEditFormChange,\r\n  handleCancelClick,\r\n}) => {\r\n  return (\r\n    <tr>\r\n      <td>\r\n      <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"\"\r\n          name=\"UserID\"\r\n          value={editFormData.UserID}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n        </td>\r\n        <td>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"\"\r\n          name=\"sid\"\r\n          value={editFormData.sid}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"\"\r\n          name=\"work_hrs\"\r\n          value={editFormData.work_hrs}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"\"\r\n          name=\"status\"\r\n          value={editFormData.status}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"date\"\r\n          required=\"required\"\r\n          placeholder=\"\"\r\n          name=\"date\"\r\n          value={editFormData.date}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <button type=\"submit\">Save</button>\r\n        <button type=\"button\" onClick={handleCancelClick}>\r\n          Cancel\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default EditableRow;","import React, { useState, Fragment } from \"react\";\r\nimport \"../empTAB.css\";\r\nimport ReadOnlyRow from \"./ReadOnlyRow\";\r\nimport EditableRow from \"./EditableRow\"\r\nimport { useFirestoreConnect,useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { EmojiPeopleRounded } from \"@mui/icons-material\";\r\nconst App = () => {\r\n  const emp= useSelector(state=>state.firestore.ordered.Schedule);\r\n  const firestore=useFirestore();\r\n  let knt=0;\r\n  \r\n  useFirestoreConnect([\r\n    {\r\n      collection:\"Schedule\",\r\n    },\r\n  ]);\r\n  console.log(emp);\r\n  const [contacts, setContacts] = useState(emp);\r\n  const [addFormData, setAddFormData] = useState({\r\n    sid: \"\",\r\n    work_hrs: \"\",\r\n    status: \"\",\r\n    date: \"\",\r\n    UserID:\"\"\r\n  });\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    sid: \"\",\r\n    work_hrs: \"\",\r\n    status: \"\",\r\n    date: \"\",\r\n    UserID:\"\"\r\n  });\r\n\r\n  const [editContactId, setEditContactId] = useState(null);\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setAddFormData(newFormData);\r\n  };\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newContact = {\r\n        sid: addFormData.sid,\r\n        work_hrs: addFormData.work_hrs,\r\n        status: addFormData.status,\r\n        date: addFormData.date,\r\n        UserID: addFormData.UserID\r\n    };\r\n    firestore.collection(\"Schedule\").add(newContact);\r\n  };\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedContact = {\r\n        sid: editFormData.sid,\r\n        work_hrs: editFormData.work_hrs,\r\n        status: editFormData.status,\r\n        date: editFormData.date,\r\n        UserID: editFormData.UserID\r\n    };\r\n\r\n    //const newContacts = [...contacts];\r\n\r\n    //const index = contacts.findIndex((contact) => contact.id === editContactId);\r\n\r\n    //newContacts[index] = editedContact;\r\n    firestore.collection(\"Schedule\").doc(editContactId).update(editedContact);\r\n    //setContacts(newContacts);\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleEditClick = (event, contact) => {\r\n    event.preventDefault();\r\n    setEditContactId(contact.id);\r\n    let id=contact.id;\r\n    let formValues;\r\n    if(knt==0){\r\n      formValues= {\r\n        sid: contact.sid,\r\n        work_hrs: contact.work_hrs,\r\n        status: contact.status,\r\n        date: contact.date,\r\n        UserID: contact.UserID\r\n      };\r\n      knt=1;\r\n    }\r\n    else{\r\n      formValues= {\r\n          sid: editFormData.sid,\r\n          work_hrs: editFormData.work_hrs,\r\n          status: editFormData.status,\r\n          date: editFormData.date,\r\n          UserID: editFormData.UserID\r\n      };\r\n    }\r\n    setEditFormData(formValues);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (contactId) => {\r\n    //const newContacts = [...contacts];\r\n    const docref=firestore.collection(\"Schedule\").doc(contactId).delete();\r\n   // const index = contacts.findIndex((contact) => contact.id === contactId);\r\n\r\n    //newContacts.splice(index, 1);\r\n\r\n    //setContacts(newContacts);\r\n  };\r\n  \r\n  console.log(emp);\r\n  \r\n  if(!emp)\r\n    return <h1>loading</h1>\r\n    var empp=emp.filter(s=>{if(s.UserID==localStorage.getItem(\"Email\")) return s;})\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"form-box\" onSubmit={handleEditFormSubmit}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>SID</th>\r\n              <th>Work Hours</th>\r\n              <th>Status</th>\r\n              <th>Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {empp.map((contact) => (\r\n              <Fragment>\r\n                {editContactId === contact.id ? (\r\n                  <EditableRow\r\n                  />\r\n                ) : (\r\n                  <ReadOnlyRow\r\n                    contact={contact}\r\n                    handleEditClick={handleEditClick}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import React, { useState } from \"react\";\r\nimport \"./navbar.css\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  const [showMediaIcons] = useState(false);\r\n  return (\r\n    <>\r\n      <nav className=\"main-nav\">\r\n        {/* 1st logo part  */}\r\n        <div className=\"logo\">\r\n          <h2>\r\n            <span>E</span>mployee\r\n            <span>P</span>ayroll\r\n          </h2>\r\n        </div>\r\n\r\n        {/* 2nd menu part  */}\r\n        <div\r\n          className={\r\n            showMediaIcons ? \"menu-link mobile-menu-link\" : \"menu-link\"\r\n          }>\r\n          <ul>\r\n            <li>\r\n              <NavLink to=\"/\">Emp Home</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/schedule\">Schedule</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/attendance\">Attendance</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/editprofile\">Your Profile</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/salary\">Salary</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/logout\">Logout</NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n      </nav>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"../empTAB.css\";\r\nconst ReadOnlyRow = ({ contact, handleEditClick, handleDeleteClick }) => {\r\n  return (\r\n    <tr>\r\n      <td>{contact.Designation}</td>\r\n      <td>{contact.salary}</td>\r\n      <td>\r\n        <button\r\n          type=\"button\"\r\n          onClick={(event) => handleEditClick(event, contact)}\r\n        >\r\n          Edit\r\n        </button>\r\n        <button type=\"button\" onClick={() => handleDeleteClick(contact.id)}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ReadOnlyRow;","import React from \"react\";\r\n\r\nconst EditableRow = ({\r\n  editFormData,\r\n  handleEditFormChange,\r\n  handleCancelClick,\r\n}) => {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"Enter desgination...\"\r\n          name=\"Designation\"\r\n          value={editFormData.Designation}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Salary...\"\r\n          name=\"salary\"\r\n          value={editFormData.salary}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <button type=\"submit\">Save</button>\r\n        <button type=\"button\" onClick={handleCancelClick}>\r\n          Cancel\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default EditableRow;","import React, { useState, Fragment } from \"react\";\r\nimport \"../empTAB.css\";\r\nimport ReadOnlyRow from \"./ReadOnlyRow\"\r\nimport EditableRow from \"./EditableRow\"\r\nimport { useFirestoreConnect,useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nconst App = () => {\r\n  const emp= useSelector(state=>state.firestore.ordered.Salary);\r\n  const firestore=useFirestore();\r\n  let knt=0;\r\n  useFirestoreConnect([\r\n    {\r\n      collection:\"Salary\",\r\n    },\r\n  ]);\r\n  const [contacts, setContacts] = useState(emp);\r\n  const [addFormData, setAddFormData] = useState({\r\n    Designation:\"\",\r\n    salary:\"\"\r\n  });\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    Designation:\"\",\r\n    salary:\"\"\r\n  });\r\n\r\n  const [editContactId, setEditContactId] = useState(null);\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setAddFormData(newFormData);\r\n  };\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newContact = {\r\n      Designation:addFormData.Designation,\r\n      salary:addFormData.salary\r\n    };\r\n    firestore.collection(\"Salary\").add(newContact);\r\n  };\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedContact = {\r\n      Designation:editFormData.Designation,\r\n      salary:editFormData.salary\r\n    };\r\n\r\n    firestore.collection(\"Salary\").doc(editContactId).update(editedContact);\r\n\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleEditClick = (event, contact) => {\r\n    event.preventDefault();\r\n    setEditContactId(contact.id);\r\n    let id=contact.id;\r\n    let formValues;\r\n    if(knt==0){\r\n      formValues = {\r\n        Designation:contact.Designation,\r\n        salary:contact.salary,\r\n      };\r\n      knt=1;\r\n    }\r\n    else{\r\n      formValues = {\r\n        Designation:editFormData.Designation,\r\n        salary:editFormData.salary,\r\n      };\r\n    }\r\n    setEditFormData(formValues);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (contactId) => {\r\n\r\n    const docref=firestore.collection(\"Salary\").doc(contactId).delete();\r\n\r\n  };\r\n  \r\n  console.log(emp);\r\n  \r\n  if(!emp)\r\n    return <h3>loading..</h3>\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"form-box\" onSubmit={handleEditFormSubmit}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Designation</th>\r\n              <th>Salary</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {emp.map((contact) => (\r\n              <Fragment>\r\n                {editContactId === contact.id ? (\r\n                  <EditableRow\r\n                    editFormData={editFormData}\r\n                    handleEditFormChange={handleEditFormChange}\r\n                    handleCancelClick={handleCancelClick}\r\n                  />\r\n                ) : (\r\n                  <ReadOnlyRow\r\n                    contact={contact}\r\n                    handleEditClick={handleEditClick}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n\r\n      <h2>Add a Contact</h2>\r\n      <form className=\"form-editEmp\" onSubmit={handleAddFormSubmit}>\r\n      <input\r\n          type=\"text\"\r\n          name=\"Designation\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Designation...\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"salary\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Salary...\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import React from \"react\";\r\nimport \"./empTAB.css\";\r\nconst ReadOnlyRow = ({ contact, handleEditClick, handleDeleteClick }) => {\r\n  return (\r\n    <tr>\r\n      <td>{contact.UserID}</td>\r\n      <td>{contact.sid}</td>\r\n      <td>{contact.work_hrs}</td>\r\n      <td>{contact.status}</td>\r\n      <td>{contact.date}</td>\r\n      <td>\r\n        <button\r\n          type=\"button\"\r\n          onClick={(event) => handleEditClick(event, contact)}\r\n        >\r\n          Edit\r\n        </button>\r\n        <button type=\"button\" onClick={() => handleDeleteClick(contact.id)}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ReadOnlyRow;","import React from \"react\";\r\n\r\nconst EditableRow = ({\r\n  editFormData,\r\n  handleEditFormChange,\r\n  handleCancelClick,\r\n}) => {\r\n  return (\r\n    <tr>\r\n      <td>\r\n      <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"\"\r\n          name=\"UserID\"\r\n          value={editFormData.UserID}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n        </td>\r\n        <td>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"\"\r\n          name=\"sid\"\r\n          value={editFormData.sid}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"\"\r\n          name=\"work_hrs\"\r\n          value={editFormData.work_hrs}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"\"\r\n          name=\"status\"\r\n          value={editFormData.status}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"date\"\r\n          required=\"required\"\r\n          placeholder=\"\"\r\n          name=\"date\"\r\n          value={editFormData.date}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <button type=\"submit\">Save</button>\r\n        <button type=\"button\" onClick={handleCancelClick}>\r\n          Cancel\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default EditableRow;","import React, { useState, Fragment } from \"react\";\r\nimport \"../empTAB.css\";\r\nimport ReadOnlyRow from \"./ReadOnlyRow\";\r\nimport EditableRow from \"./EditableRow\"\r\nimport { useFirestoreConnect,useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nconst App = () => {\r\n  const emp= useSelector(state=>state.firestore.ordered.Schedule);\r\n  const firestore=useFirestore();\r\n  let knt=0;\r\n  useFirestoreConnect([\r\n    {\r\n      collection:\"Schedule\",\r\n    },\r\n  ]);\r\n  const [contacts, setContacts] = useState(emp);\r\n  const [addFormData, setAddFormData] = useState({\r\n    sid: \"\",\r\n    work_hrs: \"\",\r\n    status: \"\",\r\n    date: \"\",\r\n    UserID:\"\"\r\n  });\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    sid: \"\",\r\n    work_hrs: \"\",\r\n    status: \"\",\r\n    date: \"\",\r\n    UserID:\"\"\r\n  });\r\n\r\n  const [editContactId, setEditContactId] = useState(null);\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setAddFormData(newFormData);\r\n  };\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newContact = {\r\n        sid: addFormData.sid,\r\n        work_hrs: addFormData.work_hrs,\r\n        status: addFormData.status,\r\n        date: addFormData.date,\r\n        UserID: addFormData.UserID\r\n    };\r\n    firestore.collection(\"Schedule\").add(newContact);\r\n  };\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedContact = {\r\n        sid: editFormData.sid,\r\n        work_hrs: editFormData.work_hrs,\r\n        status: editFormData.status,\r\n        date: editFormData.date,\r\n        UserID: editFormData.UserID\r\n    };\r\n\r\n    //const newContacts = [...contacts];\r\n\r\n    //const index = contacts.findIndex((contact) => contact.id === editContactId);\r\n\r\n    //newContacts[index] = editedContact;\r\n    firestore.collection(\"Schedule\").doc(editContactId).update(editedContact);\r\n    //setContacts(newContacts);\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleEditClick = (event, contact) => {\r\n    event.preventDefault();\r\n    setEditContactId(contact.id);\r\n    let id=contact.id;\r\n    let formValues;\r\n    if(knt==0){\r\n      formValues= {\r\n        sid: contact.sid,\r\n        work_hrs: contact.work_hrs,\r\n        status: contact.status,\r\n        date: contact.date,\r\n        UserID: contact.UserID\r\n      };\r\n      knt=1;\r\n    }\r\n    else{\r\n      formValues= {\r\n          sid: editFormData.sid,\r\n          work_hrs: editFormData.work_hrs,\r\n          status: editFormData.status,\r\n          date: editFormData.date,\r\n          UserID: editFormData.UserID\r\n      };\r\n    }\r\n    setEditFormData(formValues);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (contactId) => {\r\n    //const newContacts = [...contacts];\r\n    const docref=firestore.collection(\"Schedule\").doc(contactId).delete();\r\n   // const index = contacts.findIndex((contact) => contact.id === contactId);\r\n\r\n    //newContacts.splice(index, 1);\r\n\r\n    //setContacts(newContacts);\r\n  };\r\n  \r\n  console.log(emp);\r\n  \r\n  if(!emp)\r\n    return <h1>loading</h1>\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"form-box\" onSubmit={handleEditFormSubmit}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>UserId</th>\r\n              <th>SID</th>\r\n              <th>Work Hours</th>\r\n              <th>Status</th>\r\n              <th>Date</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {emp.map((contact) => (\r\n              <Fragment>\r\n                {editContactId === contact.id ? (\r\n                  <EditableRow\r\n                    editFormData={editFormData}\r\n                    handleEditFormChange={handleEditFormChange}\r\n                    handleCancelClick={handleCancelClick}\r\n                  />\r\n                ) : (\r\n                  <ReadOnlyRow\r\n                    contact={contact}\r\n                    handleEditClick={handleEditClick}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n\r\n      <h2>Schedule a Day</h2>\r\n      <form className=\"form-editEmp\" onSubmit={handleAddFormSubmit}>\r\n      <input\r\n          type=\"text\"\r\n          name=\"UserID\"\r\n          required=\"required\"\r\n          placeholder=\"Enter UserID...\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"sid\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Sid...\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"work_hrs\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Working hours..\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"status\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Status...\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"date\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Date...\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import { color } from \"@mui/system\";\r\nimport React from \"react\";\r\nimport \"../empTAB.css\";\r\nconst ReadOnlyRow = ({ contact, handleEditClick, handleDeleteClick }) => {\r\n  return (\r\n    <tr>\r\n      <td>{contact.UserID}</td>\r\n      <td>{contact.duration}</td>\r\n      <td>{contact.status}</td>\r\n      <td>{contact.from}</td>\r\n      \r\n      <td>\r\n        <button\r\n          type=\"button\"\r\n          onClick={(event) => handleEditClick(event, contact)}\r\n          style={{backgroundColor:\"green\"}}\r\n        >\r\n          Accept\r\n        </button>\r\n        <button type=\"button\" onClick={() => handleDeleteClick(contact.id)} style={{backgroundColor:\"red\"}}>\r\n          Ignore\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ReadOnlyRow;","import React, { useState, Fragment } from \"react\";\r\nimport \"../empTAB.css\";\r\nimport ReadOnlyRow from \"./ReadOnlyRow\";\r\nimport EditableRow from \"./EditableRow\"\r\nimport { useFirestoreConnect,useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nconst App = () => {\r\n  const emp= useSelector(state=>state.firestore.ordered.Leaves);\r\n  const firestore=useFirestore();\r\n  let knt=0;\r\n  useFirestoreConnect([\r\n    {\r\n      collection:\"Leaves\",\r\n    },\r\n  ]);\r\n  const [contacts, setContacts] = useState(emp);\r\n  const [addFormData, setAddFormData] = useState({\r\n    duration: \"\",\r\n    from: \"\",\r\n    status: \"\",\r\n    UserID:\"\"\r\n  });\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    duration: \"\",\r\n    from: \"\",\r\n    status: \"\",\r\n    UserID:\"\"\r\n  });\r\n\r\n  const [editContactId, setEditContactId] = useState(null);\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setAddFormData(newFormData);\r\n  };\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newContact = {\r\n        duration: addFormData.duration,\r\n        from: addFormData.from,\r\n        status: addFormData.status,\r\n        UserID: addFormData.UserID\r\n    };\r\n    firestore.collection(\"Leaves\").add(newContact);\r\n  };\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedContact = {\r\n        duration: editFormData.duration,\r\n        from: editFormData.from,\r\n        status: editFormData.status,\r\n        UserID: editFormData.UserID\r\n    };\r\n\r\n    //const newContacts = [...contacts];\r\n\r\n    //const index = contacts.findIndex((contact) => contact.id === editContactId);\r\n\r\n    //newContacts[index] = editedContact;\r\n    firestore.collection(\"Leaves\").doc(editContactId).update(editedContact);\r\n    //setContacts(newContacts);\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleEditClick = (event, contact) => {\r\n    event.preventDefault();\r\n    setEditContactId(contact.id);\r\n    let id=contact.id;\r\n    let formValues;\r\n    const docref=firestore.collection(\"Leaves\").doc(id).update({\"status\":\"APPROVED\"});\r\n    setEditFormData(formValues);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (contactId) => {\r\n    //const newContacts = [...contacts];\r\n    const docref=firestore.collection(\"Leaves\").doc(contactId).update({\"status\":\"REJECTED\"});\r\n  };\r\n  \r\n  console.log(emp);\r\n  \r\n  if(!emp)\r\n    return <h1>loading</h1>\r\n    var empp=emp.filter(s=>{if(s.status.toUpperCase()===\"PENDING\") return s;})\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={handleEditFormSubmit}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>UserId</th>\r\n              <th>Duration</th>\r\n              <th>Status</th>\r\n              <th>From</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {empp.map((contact) => (\r\n              <Fragment>\r\n                {editContactId === contact.id ? (\r\n                  <ReadOnlyRow\r\n                  contact={contact}\r\n                  handleEditClick={handleEditClick}\r\n                  handleDeleteClick={handleDeleteClick}\r\n                />\r\n                ) : (\r\n                  <ReadOnlyRow\r\n                    contact={contact}\r\n                    handleEditClick={handleEditClick}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n\r\n      <h2>Schedule a Leave</h2>\r\n      <form className=\"form-editEmp\" onSubmit={handleAddFormSubmit}>\r\n      <input\r\n          type=\"text\"\r\n          name=\"UserID\"\r\n          required=\"required\"\r\n          placeholder=\"Enter UserID...\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"duration\"\r\n          required=\"required\"\r\n          placeholder=\"Enter duration\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"status\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Status...\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"from\"\r\n          required=\"required\"\r\n          placeholder=\"Enter from date\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        \r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import React from \"react\";\r\nimport \"../empTAB.css\";\r\nconst ReadOnlyRow = ({ contact, handleEditClick, handleDeleteClick }) => {\r\n  return (\r\n    <tr>\r\n      <td>{contact.UserID}</td>\r\n      <td>{contact.Address}</td>\r\n      <td>{contact.Designation}</td>\r\n      <td>{contact.Email}</td>\r\n      <td>{contact.Name}</td>\r\n      <td>{contact.dob}</td>\r\n      <td>{contact.phoneNumber}</td>\r\n      <td>\r\n        <button\r\n          type=\"button\"\r\n          onClick={(event) => handleEditClick(event, contact)}\r\n        >\r\n          Edit\r\n        </button>\r\n        <button type=\"button\" onClick={() => handleDeleteClick(contact.id)}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ReadOnlyRow;","import React from \"react\";\r\n\r\nconst EditableRow = ({\r\n  editFormData,\r\n  handleEditFormChange,\r\n  handleCancelClick,\r\n}) => {\r\n  return (\r\n    <tr>\r\n      <td>\r\n      <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"\"\r\n          name=\"UserID\"\r\n          value={editFormData.UserID}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n        </td>\r\n        <td>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"\"\r\n          name=\"Address\"\r\n          value={editFormData.Address}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n        <td>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"\"\r\n          name=\"Designation\"\r\n          value={editFormData.Designation}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"\"\r\n          name=\"Email\"\r\n          value={editFormData.Email}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"\"\r\n          name=\"Name\"\r\n          value={editFormData.Name}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"date\"\r\n          required=\"required\"\r\n          placeholder=\"\"\r\n          name=\"dob\"\r\n          value={editFormData.dob}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"\"\r\n          name=\"phoneNumber\"\r\n          value={editFormData.phoneNumber}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <button type=\"submit\">Save</button>\r\n        <button type=\"button\" onClick={handleCancelClick}>\r\n          Cancel\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default EditableRow;","import React, { useState, Fragment } from \"react\";\r\nimport \"../empTAB.css\";\r\nimport ReadOnlyRow from \"./ReadOnlyRow\";\r\nimport EditableRow from \"./EditableRow\"\r\nimport { useFirestoreConnect,useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nconst App = () => {\r\n  const emp= useSelector(state=>state.firestore.ordered.Emp_Details);\r\n  const firestore=useFirestore();\r\n  let knt=0;\r\n  useFirestoreConnect([\r\n    {\r\n      collection:\"Emp_Details\",\r\n    },\r\n  ]);\r\n  const [contacts, setContacts] = useState(emp);\r\n  const [addFormData, setAddFormData] = useState({\r\n    UserID: \"\",\r\n    Address: \"\",\r\n    Designation: \"\",\r\n    Email:\"\",\r\n    Name:\"\",\r\n    dob:\"\",\r\n    phoneNumber:\"\"\r\n  });\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    UserID: \"\",\r\n    Address: \"\",\r\n    Designation: \"\",\r\n    Email:\"\",\r\n    Name:\"\",\r\n    dob:\"\",\r\n    phoneNumber:\"\"\r\n  });\r\n\r\n  const [editContactId, setEditContactId] = useState(null);\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setAddFormData(newFormData);\r\n  };\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newContact = {\r\n        UserID: addFormData.UserID,\r\n        Address: addFormData.Address,\r\n        Designation: addFormData.Designation,\r\n        Email: addFormData.Email,\r\n        Name: addFormData.Name,\r\n        dob: addFormData.dob,\r\n        phoneNumber: addFormData.phoneNumber\r\n    };\r\n    const newDat ={\r\n      UserID:addFormData.Email,\r\n      password:\"123\",\r\n      Role:\"Employee\"\r\n    };\r\n    firestore.collection(\"Emp_Details\").add(newContact);\r\n    firestore.collection(\"Credentials\").add(newDat);\r\n  };\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedContact = {\r\n        UserID: editFormData.UserID,\r\n        Address: editFormData.Address,\r\n        Designation: editFormData.Designation,\r\n        Email: editFormData.Email,\r\n        Name: editFormData.Name,\r\n        dob: editFormData.dob,\r\n        phoneNumber: editFormData.phoneNumber\r\n    };\r\n\r\n    //const newContacts = [...contacts];\r\n\r\n    //const index = contacts.findIndex((contact) => contact.id === editContactId);\r\n\r\n    //newContacts[index] = editedContact;\r\n    firestore.collection(\"Emp_Details\").doc(editContactId).update(editedContact);\r\n    //setContacts(newContacts);\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleEditClick = (event, contact) => {\r\n    event.preventDefault();\r\n    setEditContactId(contact.id);\r\n    let id=contact.id;\r\n    let formValues;\r\n    if(knt==0){\r\n      formValues= {\r\n        UserID: contact.UserID,\r\n        Address: contact.Address,\r\n        Designation: contact.Designation,\r\n        Email: contact.Email,\r\n        Name: contact.Name,\r\n        dob: contact.dob,\r\n        phoneNumber: contact.phoneNumber\r\n      };\r\n      knt=1;\r\n    }\r\n    else{\r\n      formValues = {\r\n          UserID: editFormData.UserID,\r\n          Address: editFormData.Address,\r\n          Designation: editFormData.Designation,\r\n          Email: editFormData.Email,\r\n          Name: editFormData.Name,\r\n          dob: editFormData.dob,\r\n          phoneNumber: editFormData.phoneNumber\r\n      };\r\n    }\r\n    setEditFormData(formValues);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (contactId) => {\r\n    //const newContacts = [...contacts];\r\n    const docref=firestore.collection(\"Emp_Details\").doc(contactId).delete();\r\n   // const index = contacts.findIndex((contact) => contact.id === contactId);\r\n\r\n    //newContacts.splice(index, 1);\r\n\r\n    //setContacts(newContacts);\r\n  };\r\n  \r\n  console.log(emp);\r\n  \r\n  if(!emp)\r\n    return <h1>loading</h1>\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={handleEditFormSubmit}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>UserId</th>\r\n              <th>Address</th>\r\n              <th>Designation</th>\r\n              <th>Email</th>\r\n              <th>Name</th>\r\n              <th>DOB</th>\r\n              <th>PhoneNumber</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {emp.map((contact) => (\r\n              <Fragment>\r\n                {editContactId === contact.id ? (\r\n                  <EditableRow\r\n                    editFormData={editFormData}\r\n                    handleEditFormChange={handleEditFormChange}\r\n                    handleCancelClick={handleCancelClick}\r\n                  />\r\n                ) : (\r\n                  <ReadOnlyRow\r\n                    contact={contact}\r\n                    handleEditClick={handleEditClick}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n\r\n      <h2>Add Employee</h2>\r\n      <form className=\"form-editEmp\" onSubmit={handleAddFormSubmit}>\r\n      <input\r\n          type=\"text\"\r\n          name=\"UserID\"\r\n          required=\"required\"\r\n          placeholder=\"Enter UserID...\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"Address\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Address\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"Designation\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Designation\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"Email\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Email\"\r\n          onChange={handleAddFormChange}\r\n        /><br/>\r\n        <input\r\n          type=\"text\"\r\n          name=\"Name\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Name\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"dob\"\r\n          required=\"required\"\r\n          placeholder=\"Enter DOB\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"phoneNumber\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Phone Number\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import React from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport {BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n \r\nimport {Provider} from 'react-redux';\r\nimport store,{rrfProps} from './store';\r\nimport EmpSalary from \"./components/EmpSalary/empSalary\";\r\nimport EmpAtten from \"./components/EmpAttendance/Emp_Atten\";\r\nimport Emp_Prof from \"./components/EditProfile/Emp_profile\";\r\nimport Emp_OwnSch from \"./components/EmpSchedule/EmpOwnSchedule\";\r\n// import Emptable1 from './components/EmpEditDelete/Emptable';\r\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\r\nimport NavbarEmp from \"./components/NavbarEmp\";\r\nimport Salary1 from \"./components/Salary/adminSalary\";\r\nimport EmpSch from \"./components/Schedule/EmpSchedule\";\r\nimport Leaves1 from \"./components/EmpLeave/Leave\";\r\nimport EmpEdit from \"./components/EmpEdit/EmpEditDele\";\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <NavbarEmp />\r\n      <section className=\"hero-section\">\r\n        <p>Manage all the Employees Here</p>\r\n        <h1>Welcome Employee </h1>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nconst Schedule = () => {\r\n  return (\r\n    <>\r\n      <NavbarEmp />\r\n      <section className=\"hero-section\">\r\n     <Emp_OwnSch/>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nconst Attendance = () => {\r\n  return (\r\n    <>\r\n      <NavbarEmp />\r\n      <section className=\"hero-section\">\r\n      <EmpAtten/>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nconst Editprofile = () => {\r\n  return (\r\n    <>\r\n      <NavbarEmp />\r\n      <section className=\"hero-section\">\r\n      <Emp_Prof/>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nconst Salary = () => {\r\n  return (\r\n    <>\r\n      <NavbarEmp />\r\n      <section className=\"hero-section\">\r\n      <EmpSalary/>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nconst Logout = () => {\r\n  return (\r\n    <>\r\n      <NavbarEmp />\r\n      <section className=\"hero-section\">\r\n        <h1>Logout</h1>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <ReactReduxFirebaseProvider {...rrfProps}>\r\n        <BrowserRouter>\r\n      <Switch>\r\n      \r\n      <Route exact path=\"/\">\r\n        <Home />\r\n      </Route>\r\n      \r\n      <Route path=\"/schedule\">\r\n        <Schedule />\r\n      </Route>\r\n\r\n      <Route path=\"/salary\">\r\n        <Salary/>\r\n      </Route>\r\n\r\n      <Route path=\"/editprofile\">\r\n        <Editprofile/>\r\n      </Route>\r\n\r\n      <Route path=\"/attendance\">\r\n        <Attendance />\r\n      </Route>\r\n      <Route path=\"/logout\">\r\n        <Logout />\r\n      </Route>\r\n\r\n    </Switch>\r\n    </BrowserRouter>\r\n      </ReactReduxFirebaseProvider>\r\n    </Provider>\r\n  );\r\n};\r\n\r\n//===================================================================================\r\n//Admin section\r\n//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n\r\n// const Home = () => {\r\n//   return (\r\n//     <>\r\n//       <Navbar />\r\n//       <section className=\"hero-section\">\r\n//         <p>Manage all the Employees Here</p>\r\n//         <h1>Welcome Admin bye </h1>\r\n//         {/* <Login/> */}\r\n//       </section>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// const Leaves = () => {\r\n//   return (\r\n//     <>\r\n//       <Navbar />\r\n//       <section className=\"hero-section\">\r\n//       <Leaves1 />\r\n//       </section>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// const Schedule = () => {\r\n//   return (\r\n//     <>\r\n//       <Navbar />\r\n//       <section className=\"hero-section\">\r\n//         <EmpSch />\r\n//       </section>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// const Edit = () => {\r\n//   return (\r\n//     <>\r\n//       <Navbar />\r\n//       <section className=\"hero-section\">\r\n//         <EmpEdit />\r\n//       </section>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// const Salary = () => {\r\n//   return (\r\n//     <>\r\n//       <Navbar />\r\n//       <section className=\"hero-section\">\r\n//         <Salary1/>\r\n//       </section>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// const App = () => {\r\n//   return (\r\n//     <Provider store={store}>\r\n//       <ReactReduxFirebaseProvider {...rrfProps}>\r\n//         <BrowserRouter>\r\n//       <Switch>\r\n      \r\n//       <Route exact path=\"/\">\r\n//         <Home />\r\n//       </Route>\r\n      \r\n//       <Route path=\"/schedule\">\r\n//         <Schedule />\r\n//       </Route>\r\n\r\n//       <Route path=\"/salary\">\r\n//         <Salary/>\r\n//       </Route>\r\n\r\n//       <Route path=\"/leave\">\r\n//         <Leaves/>\r\n//       </Route>\r\n\r\n//       <Route path=\"/edit\">\r\n//         <Edit />\r\n//       </Route>\r\n\r\n//     </Switch>\r\n//     </BrowserRouter>\r\n//       </ReactReduxFirebaseProvider>\r\n//     </Provider>\r\n//   );\r\n// };\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport {BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Login from './components/login1.js';\r\nimport {Provider} from 'react-redux';\r\nimport store,{rrfProps} from './store';\r\nimport EmpSalary from \"./components/EmpSalary/empSalary\";\r\nimport EmpAtten from \"./components/EmpAttendance/Emp_Atten\";\r\nimport Emp_Prof from \"./components/EditProfile/Emp_profile\";\r\nimport Emp_OwnSch from \"./components/EmpSchedule/EmpOwnSchedule\";\r\n// import Emptable1 from './components/EmpEditDelete/Emptable';\r\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\r\nimport NavbarEmp from \"./components/NavbarEmp\";\r\nimport Salary1 from \"./components/Salary/adminSalary\";\r\nimport EmpSch from \"./components/Schedule/EmpSchedule\";\r\nimport Leaves1 from \"./components/EmpLeave/Leave\";\r\nimport EmpEdit from \"./components/EmpEdit/EmpEditDele\";\r\n// const Home = () => {\r\n//   return (\r\n//     <>\r\n//       <NavbarEmp />\r\n//       <section className=\"hero-section\">\r\n//         <p>Manage all the Employees Here</p>\r\n//         <h1>Welcome Employee </h1>\r\n//       </section>\r\n//     </>\r\n//   );\r\n// };\r\n// const Schedule = () => {\r\n//   return (\r\n//     <>\r\n//       <NavbarEmp />\r\n//       <section className=\"hero-section\">\r\n//      <Emp_OwnSch/>\r\n//       </section>\r\n//     </>\r\n//   );\r\n// };\r\n// const Attendance = () => {\r\n//   return (\r\n//     <>\r\n//       <NavbarEmp />\r\n//       <section className=\"hero-section\">\r\n//       <EmpAtten/>\r\n//       </section>\r\n//     </>\r\n//   );\r\n// };\r\n// const Editprofile = () => {\r\n//   return (\r\n//     <>\r\n//       <NavbarEmp />\r\n//       <section className=\"hero-section\">\r\n//       <Emp_Prof/>\r\n//       </section>\r\n//     </>\r\n//   );\r\n// };\r\n// const Salary = () => {\r\n//   return (\r\n//     <>\r\n//       <NavbarEmp />\r\n//       <section className=\"hero-section\">\r\n//       <EmpSalary/>\r\n//       </section>\r\n//     </>\r\n//   );\r\n// };\r\n// const Logout = () => {\r\n//   return (\r\n//     <>\r\n//       <NavbarEmp />\r\n//       <section className=\"hero-section\">\r\n//         <h1>Logout</h1>\r\n//       </section>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// const App = () => {\r\n//   return (\r\n//     <Provider store={store}>\r\n//       <ReactReduxFirebaseProvider {...rrfProps}>\r\n//         <BrowserRouter>\r\n//       <Switch>\r\n      \r\n//       <Route exact path=\"/\">\r\n//         <Home />\r\n//       </Route>\r\n      \r\n//       <Route path=\"/schedule\">\r\n//         <Schedule />\r\n//       </Route>\r\n\r\n//       <Route path=\"/salary\">\r\n//         <Salary/>\r\n//       </Route>\r\n\r\n//       <Route path=\"/editprofile\">\r\n//         <Editprofile/>\r\n//       </Route>\r\n\r\n//       <Route path=\"/attendance\">\r\n//         <Attendance />\r\n//       </Route>\r\n//       <Route path=\"/logout\">\r\n//         <Logout />\r\n//       </Route>\r\n\r\n//     </Switch>\r\n//     </BrowserRouter>\r\n//       </ReactReduxFirebaseProvider>\r\n//     </Provider>\r\n//   );\r\n// };\r\n\r\n//===================================================================================\r\n//Admin section\r\n//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <section className=\"hero-section\">\r\n        <p>Manage all the Employees Here</p>\r\n        <h1>Welcome Admin bye </h1>\r\n        {/* <Login/> */}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Leaves = () => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <section className=\"hero-section\">\r\n      <Leaves1 />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Schedule = () => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <section className=\"hero-section\">\r\n        <EmpSch />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Edit = () => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <section className=\"hero-section\">\r\n        <EmpEdit />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Salary = () => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <section className=\"hero-section\">\r\n        <Salary1/>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <ReactReduxFirebaseProvider {...rrfProps}>\r\n        <BrowserRouter>\r\n      <Switch>\r\n      \r\n      <Route exact path=\"/\">\r\n        <Home />\r\n      </Route>\r\n      \r\n      <Route path=\"/schedule\">\r\n        <Schedule />\r\n      </Route>\r\n\r\n      <Route path=\"/salary\">\r\n        <Salary/>\r\n      </Route>\r\n\r\n      <Route path=\"/leave\">\r\n        <Leaves/>\r\n      </Route>\r\n\r\n      <Route path=\"/edit\">\r\n        <Edit />\r\n      </Route>\r\n\r\n    </Switch>\r\n    </BrowserRouter>\r\n      </ReactReduxFirebaseProvider>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { useState } from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport {BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Login from './components/login1.js';\r\nimport {Provider} from 'react-redux';\r\nimport store,{rrfProps} from './store';\r\nimport EmpSalary from \"./components/EmpSalary/empSalary\";\r\nimport EmpAtten from \"./components/EmpAttendance/Emp_Atten\";\r\nimport Emp_Prof from \"./components/EditProfile/Emp_profile\";\r\nimport Emp_OwnSch from \"./components/EmpSchedule/EmpOwnSchedule\";\r\n// import Emptable1 from './components/EmpEditDelete/Emptable';\r\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\r\nimport NavbarEmp from \"./components/NavbarEmp\";\r\nimport Salary1 from \"./components/Salary/adminSalary\";\r\nimport EmpSch from \"./components/Schedule/EmpSchedule\";\r\nimport Leaves1 from \"./components/EmpLeave/Leave\";\r\nimport EmpEdit from \"./components/EmpEdit/EmpEditDele\";\r\n//import LoginForm from './LoginForm';\r\nimport './login.css';\r\nimport EmpDashboard from './EmpDash';\r\nimport { useFirestoreConnect,useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AdminDashboard from './AdminDash';\r\nvar k=0;\r\n\r\nfunction LoginForm({ Login, error }) {\r\n  \r\n  const [details, setDetails] = useState({ type: \"Admin\", email: \"\", password: \"\" });\r\n\r\n  const submitHandler = e => {\r\n      e.preventDefault();\r\n\r\n      Login(details);\r\n  }\r\n\r\n  return (\r\n    <div class=\"login\">\r\n      <form onSubmit={submitHandler}>\r\n          <div className=\"form-inner\">\r\n              <h2>Login</h2>\r\n              {(error !== \"\") ? (<div className=\"error\">{error}</div>) : \"\"}\r\n\r\n              <div class=\"select\">\r\n              <select name=\"type\" id=\"type\"\r\n              value = {details.type} onChange={e => \r\n                  setDetails({ ...details, type: e.target.value })}\r\n              >\r\n              <option value=\"Admin\">Admin</option>\r\n              <option value=\"Employee\">Employee</option>\r\n              </select>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email: </label>\r\n                  <input type=\"email\" name=\"email\" id=\"email\" \r\n                  onChange={e => setDetails({ ...details, email: e.target.value })} value={details.email} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password: </label>\r\n                  <input type=\"password\" name=\"password\" id=\"password\" \r\n                  onChange={e => setDetails({ ...details, password: e.target.value })} value={details.password} />\r\n              </div>\r\n              <input type=\"submit\" value=\"LOGIN\" />\r\n          </div>\r\n      </form>\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nconst  App = () =>{\r\n  const emp= useSelector(state=>state.firestore.ordered.Credentials);\r\n  const firestore=useFirestore();\r\n  useFirestoreConnect([\r\n    {\r\n      collection:\"Credentials\",\r\n    },\r\n  ]);\r\n  \r\n  const adminUser = {\r\n    email: \"admin@admin.com\",\r\n    password: \"\"\r\n  }\r\n\r\n  const [user, setUser] = useState({ type: \"\", email: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const Login = details => {\r\n    //console.log(details);\r\n\r\n      setUser({\r\n        type: details.type,\r\n        email: details.email\r\n      })\r\n      var doc=emp;\r\n      console.log(doc);\r\n      let flag=0;\r\n      doc.forEach(doc1 => {\r\n        if(doc1.UserID===details.email && doc1.password===details.password)\r\n        {\r\n          setUser({\r\n            type: details.type,\r\n            email: details.email\r\n          });\r\n          if(doc1.Role===\"Admin\"){\r\n            k=1;\r\n          }\r\n          if(doc1.Role===\"Employee\"){\r\n            k=2;\r\n          }\r\n          flag=1;\r\n          localStorage.setItem(\"Email\",doc1.UserID);\r\n          console.log(localStorage.getItem(\"Email\"));\r\n        }\r\n\r\n      });\r\n      if(flag==0)\r\n       { \r\n        k=0;\r\n        console.log(\"Details do not match\");\r\n        setError(\"Details do not match\");\r\n      }\r\n      \r\n      \r\n    \r\n  }\r\n\r\n  const Logout = () => {\r\n    setUser({ type: \"\", email: \"\" });\r\n  }\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <ReactReduxFirebaseProvider {...rrfProps}>\r\n      {(k===2) ? (\r\n        /*\r\n         <div className=\"welcome\">\r\n          <h2>Welcome , <span></span></h2>\r\n          <h2>You are , <span>{user.type}</span></h2>\r\n          <button onClick={Logout}>Logout</button>\r\n        </div> */\r\n        <>\r\n        <EmpDashboard />\r\n        </>\r\n      ) : (\r\n        // <AdminDashboard/>\r\n        (k===0)?(\r\n        <LoginForm Login={Login} error={error} />):\r\n        (\r\n          <>\r\n          <AdminDashboard/>\r\n          </>\r\n        )\r\n        \r\n      )}\r\n      </ReactReduxFirebaseProvider>\r\n      </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {Provider} from 'react-redux';\r\nimport {ReactReduxFirebaseProvider} from 'react-redux-firebase';\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store,{rrfProps} from \"./store\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n      <ReactReduxFirebaseProvider {...rrfProps}>\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>\r\n  </ReactReduxFirebaseProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}